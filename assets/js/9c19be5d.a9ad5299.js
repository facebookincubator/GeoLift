"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[166],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,p=u["".concat(l,".").concat(m)]||u[m]||h[m]||i;return n?a.createElement(p,s(s({ref:t},d),{},{components:n})):a.createElement(p,s({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:o,s[1]=r;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},353:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var a=n(3117),o=n(102),i=(n(7294),n(3905)),s=["components"],r={sidebar_position:2},l="GeoLift Walkthrough",c={unversionedId:"GettingStarted/Walkthrough",id:"GettingStarted/Walkthrough",title:"GeoLift Walkthrough",description:"---",source:"@site/docs/GettingStarted/Walkthrough.md",sourceDirName:"GettingStarted",slug:"/GettingStarted/Walkthrough",permalink:"/GeoLift/docs/GettingStarted/Walkthrough",editUrl:"https://github.com/facebookincubator/GeoLift/docs/GettingStarted/Walkthrough.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started with GeoLift",permalink:"/GeoLift/docs/GettingStarted/InstallingR"},next:{title:"GeoLift Methodology",permalink:"/GeoLift/docs/Methodology/"}},d=[{value:"1. Data and R Environment",id:"1-data-and-r-environment",children:[{value:"Set-up of the R Environment",id:"set-up-of-the-r-environment",children:[],level:3},{value:"Data",id:"data",children:[],level:3}],level:2},{value:"2. Power Analysis",id:"2-power-analysis",children:[{value:"How many test markets?",id:"how-many-test-markets",children:[],level:3},{value:"Market Selection",id:"market-selection",children:[],level:3},{value:"What about the Minum Detectable Effect?",id:"what-about-the-minum-detectable-effect",children:[],level:3},{value:"Finding the Duration and Budget",id:"finding-the-duration-and-budget",children:[],level:3}],level:2},{value:"3. Analyzing the Test Results",id:"3-analyzing-the-test-results",children:[{value:"Test Data",id:"test-data",children:[],level:3},{value:"GeoLift Inference",id:"geolift-inference",children:[],level:3},{value:"Improving The Model",id:"improving-the-model",children:[],level:3}],level:2}],h={toc:d};function u(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"geolift-walkthrough"},"GeoLift Walkthrough"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"1-data-and-r-environment"},"1. Data and R Environment"),(0,i.kt)("h3",{id:"set-up-of-the-r-environment"},"Set-up of the R Environment"),(0,i.kt)("p",null,"After installing the ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift")," package, it's important to load it into our R session."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},"library(GeoLift)\n")),(0,i.kt)("h3",{id:"data"},"Data"),(0,i.kt)("p",null,"To show an end-to-end implementation of GeoLift we will use simulated\ndata of 40 US cities across 90 days to first design a test, select test\nmarkets, run power calculations, and finally calculate the Lift caused\nby the campaign. As with every GeoLift test, we start analyzing pre-test\nhistorical information. We will use data included in the ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift"),"\npackage."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},"data(GeoLift_PreTest)\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift_PreTest")," dataset contains three variables: location (city),\ndate (in \u201cyyyy-mm-dd\u201d format), and Y (number of conversions in each\nday/location)."),(0,i.kt)("p",null,"The first step to run a ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift")," test is to read the data into the\nproper format using the ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoDataRead")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,\n                                    date_id = "date",\n                                    location_id = "location",\n                                    Y_id = "Y",\n                                    format = "yyyy-mm-dd")\nhead(GeoTestData_PreTest)\n#>   location time    Y\n#> 1  atlanta    1 3384\n#> 2  atlanta    2 3904\n#> 3  atlanta    3 5734\n#> 4  atlanta    4 4311\n#> 5  atlanta    5 3686\n#> 6  atlanta    6 3374\n')),(0,i.kt)("p",null,"This function analyzes the dataset, handles locations with missing data,\nand returns a data frame with time-stamps instead of dates. In this\ncase, since we\u2019re inputting daily data each time unit represents a day."),(0,i.kt)("p",null,"A good next step is to plot the panel data and observe it\u2019s trend,\ncontribution per location, and also to detect any data anomalies before\nmoving on to the data analysis."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'GeoPlot(GeoTestData_PreTest,\n        Y_id = "Y",\n        time_id = "time",\n        location_id = "location")\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"GeoPlot",src:n(5755).Z})),(0,i.kt)("p",null,"In this case we see a similar pattern that\u2019s shared across all\nlocations."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"2-power-analysis"},"2. Power Analysis"),(0,i.kt)("p",null,"Running a power analysis is fundamental prior to executing a test. It is\nonly through a thorough statistical analysis of our data that we can\nset-up a test for success. In general, through the power analysis we can\nfind the optimal number of test locations, best test duration, select\nthe ideal test and control markets, get a good idea of the budget needed\nto run a test, find which is the Minimum Detectable Effect to obtain\nsignificant results, and set proper expectations for the results."),(0,i.kt)("h3",{id:"how-many-test-markets"},"How many test markets?"),(0,i.kt)("p",null,"In general, there are two main types of users of ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift"),"\u2019s power\ncalculations: ","*"," Those who through prior analysis already know which\nlocations they want to test and simply want to validate their test\ndesign. ","*"," Users who do not have an initial design in mind and want to\ndo a data-driven test set-up."),(0,i.kt)("p",null,"For those who fall under the second scenario, the first step is to get\nan idea of how many test locations we would generally need to obtain a\nwell-powered test. This step allows us to better understand the data and\nnarrow down the number of test configurations. This analysis can be\nachieved using the ",(0,i.kt)("inlineCode",{parentName:"p"},"NumberLocations")," function of ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift")," which works\nby simulating a large amount of tests and assess their results and fit\nstatistics."),(0,i.kt)("p",null,"The parameters used in the ",(0,i.kt)("inlineCode",{parentName:"p"},"NumberLocations")," function inform the names\nof the time, location, and units variables (time","_","id, location","_","id, and\ntime","_","id respectively) in the input data. We also specify the length of\nthe test we have on mind with the treatment","_","periods parameter (if not\nsure, you can enter a list of test lengths too), the number of\nsimulations we want to run, control the output through the optional\nplotting and progress bar parameters, set the desired significance and\npower level, and also decide whether to include unit fixed-effects to\nthe model. There are several additional parameters that can be used to\nfurther customize the simulations and outputs which can be accessed in\nthe package\u2019s documentation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'resultsNum <- NumberLocations(data = GeoTestData_PreTest,\n                                Y_id = "Y",\n                                location_id = "location",\n                                time_id = "time",\n                                n_sim = 500,\n                                treatment_periods = 15,\n                                plot = TRUE,\n                                power = 0.8,\n                                alpha = 0.1,\n                                fixed_effects = TRUE,\n                                ProgressBar = TRUE)\n#> Attempting to load the environment \'package:tidyr\'\n#> [1] "Average Power By Number of Locations"\n#> # A tibble: 12 x 3\n#>        n mean_pow mean_L2ScaledImbalance\n#>    <dbl>    <dbl>                  <dbl>\n#>  1     0    0                      1\n#>  2     1    0.886                  0.445\n#>  3     2    0.872                  0.401\n#>  4     4    0.88                   0.366\n#>  5     7    0.874                  0.351\n#>  6     8    0.886                  0.356\n#>  7    10    0.874                  0.359\n#>  8    13    0.85                   0.375\n#>  9    15    0.844                  0.369\n#> 10    16    0.832                  0.375\n#> 11    18    0.798                  0.387\n#> 12    20    0.834                  0.396\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"NumberLocations",src:n(5974).Z})),(0,i.kt)("p",null,"he results show that we can obtain well-powered test even from just a\nfew locations. Moreover, the output shows the Scaled L2 Imbalance\nmetric, which is a metric between 0 and 1 that represents how well the\nmodel is predicting the pre-treatment observed values through the\nSynthetic Control. Scaled L2 Imbalance values of 0 show a perfect match\nof pre-treatment values and values of 1 show a very inaccurate\nprediction. In this case, we observe that this metric is relatively\nstable once we have a couple or more test locations. These results\nprovide a good starting point as we now know that we can get a\nwell-powered test even if we just have a few test locations. In any\ncase, it is important to mention that ",(0,i.kt)("inlineCode",{parentName:"p"},"NumberLocations")," is just menat to\nguide our analysis as power can drastically change between different\nmarket selections even if we keep the same number of test markets."),(0,i.kt)("h3",{id:"market-selection"},"Market Selection"),(0,i.kt)("p",null,"Once that we have a better idea of how many markets are needed for a\nwell.powered test, we can proceed to the Market Selection. In this step\nwe use simulations to find which are the best combinations of test and\ncontrol locations for a predetermined number of test markets. This\nprocess can be accomplished using the ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," function\nwhich will simulate a large amount of tests using rolling windows of\ndates to find which combinations of test and control locations can\nconsistently provide stable and well-powered tests."),(0,i.kt)("p",null,"Similar to the previous function, we communicate to\n",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," the layout of our object through the time","_","id,\nlocation","_","id, and Y","_","id parameters. In addition, we set a test length\n(or lengths if unsure) using the treatment","_","periods parameter and\nsignificance level through alpha. Moreover, the horizon parameter allows\nus to focus more on more recent time-stamps. This is especially useful\nif we see that older time-periods have significantly different dynamics\nto the more recent (ones where the test would take place). In this case,\nsetting horizon = 50 is telling ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," that we should\nfocus on time periods ","[","50,90","]",". In addition, the N parameter specifies\nthe total number of locations that can be part of the test. Following\nthe results found by ",(0,i.kt)("inlineCode",{parentName:"p"},"NumberLocations")," we focus on test designs that\nhave between 2 and 4 cities in the test group. Finally, some of the\noutputs of the function can be controlled through parameters such as\ntop","_","results which will determine how many of the top locations will be\nprinted."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'resultsSearch <- GeoLiftPower.search(data = GeoTestData_PreTest,\n                                     treatment_periods = c(15),\n                                     N = c(2,3,4),\n                                     horizon = 50,\n                                     Y_id = "Y",\n                                     location_id = "location",\n                                     time_id = "time",\n                                     top_results = 20,\n                                     alpha = 0.1,\n                                     type = "pValue",\n                                     fixed_effects = TRUE,\n                                     ProgressBar = TRUE)\n#> [1] "Best 20 test markets:"\n#> # A tibble: 20 x 1\n#>    location\n#>    <chr>\n#>  1 chicago, portland\n#>  2 chicago, cincinnati\n#>  3 chicago, cincinnati, houston, portland\n#>  4 chicago, houston, portland\n#>  5 columbus, jacksonville, minneapolis\n#>  6 columbus, jacksonville, milwaukee, minneapolis\n#>  7 jacksonville, minneapolis\n#>  8 atlanta, chicago, cincinnati, san diego\n#>  9 jacksonville, kansas city, milwaukee, oakland\n#> 10 kansas city, milwaukee, oakland\n#> 11 columbus, minneapolis, new york\n#> 12 detroit, jacksonville, new orleans\n#> 13 atlanta, chicago, cincinnati\n#> 14 austin, oakland\n#> 15 nashville, san diego\n#> 16 cleveland, denver, washington\n#> 17 dallas, washington\n#> 18 cleveland, dallas, denver, washington\n#> 19 cleveland, denver\n#> 20 atlanta, chicago, reno\n')),(0,i.kt)("p",null,"The results show the best combination of test markets, the average power\nthat the combination was able to provide, its the average Scaled L2\nImbalance across all simulations, the proportion of total conversions\nthat the test markets represent, and it\u2019s overall rank determined by\npower and imbalance. In this case, we see that a test that uses the\ncombination of Chicago and Portland as test locations appears as the\ntop-ranked choice."),(0,i.kt)("p",null,"Inspecting the object created by ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," shows us a more\ndetailed list of results."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},"head(resultsSearch,10)\n#>                                                location mean_pow\n#> 1                                     chicago, portland        1\n#> 2                                   chicago, cincinnati        1\n#> 3                chicago, cincinnati, houston, portland        1\n#> 4                            chicago, houston, portland        1\n#> 5                   columbus, jacksonville, minneapolis        1\n#> 6        columbus, jacksonville, milwaukee, minneapolis        1\n#> 7                             jacksonville, minneapolis        1\n#> 8               atlanta, chicago, cincinnati, san diego        1\n#> 9         jacksonville, kansas city, milwaukee, oakland        1\n#> 10                      kansas city, milwaukee, oakland        1\n\n#>    mean_scaled_l2_imbalance ProportionTotal_Y rank\n#> 1                 0.1732343        0.03306537    1\n#> 2                 0.1909320        0.03418832    2\n#> 3                 0.1981689        0.07576405    3\n#> 4                 0.2248921        0.05797087    4\n#> 5                 0.2315280        0.05485904    5\n#> 6                 0.2405941        0.07980000    6\n#> 7                 0.2410849        0.03032910    7\n#> 8                 0.2442581        0.07972448    8\n#> 9                 0.2574026        0.14137854    9\n#> 10                0.2685320        0.12663961   10\n")),(0,i.kt)("p",null,"One key part of ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," is that it use the similarities\nbetween the market\u2019s time series to determine hot to best combine them\ninto the test and control groups. This is important as Synthetic Control\nMethods rely on the availability of similar markets to the test in order\nto create the counterfactual. For this reason, the ",(0,i.kt)("inlineCode",{parentName:"p"},"MarketSelection"),"\nfunction is a core part of ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search"),". To obtain a better\nunderstanding of the similarity structure between our cities you could\nrun ",(0,i.kt)("inlineCode",{parentName:"p"},"MarketSelection"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'MarketSelection(GeoTestData_PreTest, location_id = "location", time_id = "time", Y_id = "Y")[1:5,1:5]\n#>      [,1]          [,2]           [,3]            [,4]          [,5]\n#> [1,] "atlanta"     "chicago"      "las vegas"     "cleveland"   "reno"\n#> [2,] "austin"      "oakland"      "oklahoma city" "kansas city" "saint paul"\n#> [3,] "baltimore"   "philadelphia" "reno"          "chicago"     "houston"\n#> [4,] "baton rouge" "portland"     "cincinnati"    "san diego"   "chicago"\n#> [5,] "boston"      "new orleans"  "jacksonville"  "milwaukee"   "detroit"\n')),(0,i.kt)("p",null,"The results show a matrix of similarities, where columns 2 onward\nrepresents an ordered list of the most similar location to the one\nshowed in the first column. For instance, these results show that the\nmost similar city to Atlanta is Chicago followed by Las Vegas and\nCleveland."),(0,i.kt)("h3",{id:"what-about-the-minum-detectable-effect"},"What about the Minum Detectable Effect?"),(0,i.kt)("p",null,"Even though ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," showed us which combination of test\nand control markets were able to consistently obtain well-powered\nresults in a Synthetic Control test, it doesn\u2019t tell us what is the Lift\nwe would need to obtain that powerful test. That\u2019s why we recommend to\nsupplement the results of ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," with the simulations run\nby the function ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPowerFinder"),". More specifically, while the\nformer analyzes the stability of the time-series and ability of a SCM to\nreplicate the results, the latter explores the Minimum Detectable Effect\nthat a combination of test and control locations would provide."),(0,i.kt)("p",null,"The parameters needed by ",(0,i.kt)("inlineCode",{parentName:"p"},"resultsFind")," are very similar to the ones used\nby ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," with the difference that this function doesn\u2019t\nuse a horizon as it will focus on the most recent available data to run\na test as it is the one that would be closest to the market dynamics\nthat a test would experience. Also, a sequence of Effect Sizes or Lifts\nare needed by this function as part of the effect","_","size parameter. Each\nelement on this sequence will be assessed to find the test\u2019s Minimum\nDetectable Effect. In this case, we entered two different test lengths:\n10 and 15 days as part of the treatment","_","periods parameter. Setting the\nplot","_","best parameter to TRUE will output the plot of the top 4 test\nmarkets to perform a deeper dive."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'\nresultsFind <- GeoLiftPowerFinder(data = GeoTestData_PreTest,\n                                  treatment_periods = c(10,15),\n                                  N = c(2,3,4),\n                                  Y_id = "Y",\n                                  location_id = "location",\n                                  time_id = "time",\n                                  effect_size = seq(0, 0.5, 0.05),\n                                  top_results = 5,\n                                  alpha = 0.1,\n                                  fixed_effects = TRUE,\n                                  ProgressBar = TRUE,\n                                  plot_best = TRUE)\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"PowerFinder_10",src:n(5882).Z}),"\n",(0,i.kt)("img",{alt:"PowerFinder_15",src:n(2234).Z})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},"head(resultsFind,10)\n#>                                    location pvalue duration MinDetectableEffect\n#> 1                         chicago, portland      0       10                 0.1\n#> 2                         chicago, portland      0       15                 0.1\n#> 3                       chicago, cincinnati      0       15                 0.1\n#> 4    chicago, cincinnati, houston, portland      0       10                 0.1\n#> 5  columbus, minneapolis, new york, orlando      0       10                 0.1\n#> 6                     baton rouge, portland      0       15                 0.1\n#> 7  columbus, minneapolis, new york, orlando      0       15                 0.1\n#> 8                 jacksonville, minneapolis      0       10                 0.1\n#> 9                chicago, houston, portland      0       10                 0.1\n#> 10               chicago, houston, portland      0       15                 0.1\n#>    ScaledL2Imbalance ProportionTotal_Y rank\n#> 1          0.1682310        0.03306537    1\n#> 2          0.1738778        0.03306537    2\n#> 3          0.1842457        0.03418832    3\n#> 4          0.1966996        0.07576405    4\n#> 5          0.2188363        0.08010168    5\n#> 6          0.2220392        0.03289916    6\n#> 7          0.2245568        0.08010168    7\n#> 8          0.2278603        0.03032910    8\n#> 9          0.2305628        0.05797087    9\n#> 10         0.2336638        0.05797087   10\n")),(0,i.kt)("p",null,"The results echo the findings of ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower.search")," and show that the\ncombination of Chicago and Portland as test locations is optimal in\nterms of stability and a Minimum Detectable Effect that is both small\nand which has high certainty. Moreover, the Scaled L2 Imbalance results\nshow a good fit of the Synthetic Control on pre-treatment periods."),(0,i.kt)("h3",{id:"finding-the-duration-and-budget"},"Finding the Duration and Budget"),(0,i.kt)("p",null,"So far our Market Selection based on Power Analyses provided us with a\npromising combination of test and control locations. Specifically, we\nwould focus our treatment on Chicago and Portland while putting the rest\nof the locations in the holdout group. However, we still haven\u2019t found\nthe ideal test duration and estimated budget to necessary to run this\ntest. To do so, we need to perform a more thorough Power Analysis\nfocused on our chosen test configuration. The ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLiftPower")," function\ntakes a set of test cities defined in the locations parameter, together\nwith a horizon, a sequence of lifts or effect sizes to be analyzed, and\na Cost Per Incremental Conversion (CPIC). This CPIC will allow us to\nestimate the budget needed to achieve the required lift for a\nwell-powered test. Moreover, providing a list of different length\ndurations in the treatment","_","periods parameter lets us see what the ideal\ntest duration should be for this particular set of test locations."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'locs <- c("chicago", "portland")\n\nresultsPow <- GeoLiftPower(GeoTestData_PreTest,\n                           locations = locs,\n                           effect_size = seq(0,0.25,0.01),\n                           treatment_periods = c(10,15),\n                           horizon = 50,\n                           Y_id = "Y",\n                           location_id = "location",\n                           time_id = "time",\n                           cpic = 7.50)\n\nplot(resultsPow, actual_values = TRUE)\n#>    duration lift     power\n#> 1        10 0.00 0.0000000\n#> 2        10 0.01 0.0000000\n#> 3        10 0.02 0.0000000\n#> 4        10 0.03 0.0000000\n#> 5        10 0.04 0.0312500\n#> 6        10 0.05 0.1562500\n#> 7        10 0.06 0.4062500\n#> 8        10 0.07 0.5625000\n#> 9        10 0.08 0.7812500\n#> 10       10 0.09 0.9687500\n#> 11       10 0.10 0.9687500\n#> 12       10 0.11 0.9687500\n#> 13       10 0.12 1.0000000\n#> 14       10 0.13 1.0000000\n#> 15       10 0.14 1.0000000\n#> 16       10 0.15 1.0000000\n#> 17       10 0.16 1.0000000\n#> 18       10 0.17 1.0000000\n#> 19       10 0.18 1.0000000\n#> 20       10 0.19 1.0000000\n#> 21       10 0.20 1.0000000\n#> 22       10 0.21 1.0000000\n#> 23       10 0.22 1.0000000\n#> 24       10 0.23 1.0000000\n#> 25       10 0.24 1.0000000\n#> 26       10 0.25 1.0000000\n#> 27       15 0.00 0.0000000\n#> 28       15 0.01 0.0000000\n#> 29       15 0.02 0.0000000\n#> 30       15 0.03 0.0000000\n#> 31       15 0.04 0.0000000\n#> 32       15 0.05 0.1851852\n#> 33       15 0.06 0.3333333\n#> 34       15 0.07 0.5555556\n#> 35       15 0.08 0.7037037\n#> 36       15 0.09 0.7407407\n#> 37       15 0.10 0.8888889\n#> 38       15 0.11 1.0000000\n#> 39       15 0.12 1.0000000\n#> 40       15 0.13 1.0000000\n#> 41       15 0.14 1.0000000\n#> 42       15 0.15 1.0000000\n#> 43       15 0.16 1.0000000\n#> 44       15 0.17 1.0000000\n#> 45       15 0.18 1.0000000\n#> 46       15 0.19 1.0000000\n#> 47       15 0.20 1.0000000\n#> 48       15 0.21 1.0000000\n#> 49       15 0.22 1.0000000\n#> 50       15 0.23 1.0000000\n#> 51       15 0.24 1.0000000\n#> 52       15 0.25 1.0000000\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Power_10",src:n(3436).Z}),"\n",(0,i.kt)("img",{alt:"Power_15",src:n(7362).Z})),(0,i.kt)("p",null,"The power curves for the 10 and 15 day tests show similar results with a\nminimum required lift of roughly 10%. Moreover, budget calculations\nindicate that at a $7.50 Cost Per Incremental Conversion, a well-powered\n15-day test would require a budget of around $60,000."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"3-analyzing-the-test-results"},"3. Analyzing the Test Results"),(0,i.kt)("p",null,"Based on the results of the Power Calculations, a test is set-up in\nwhich a 15-day marketing campaign will be executed in the cities of\nChicago and Portland while the rest of the locations will be put on\nholdout. Following the completion from this marketing campaign, we\nreceive sales data that reflects these results. This new data-set\ncontains the same format and information as the pre-test one but\ncrucially includes results for the duration of the campaign. Depending\non the vertical and product, adding a post-campaign cooldown period\nmight be useful."),(0,i.kt)("h3",{id:"test-data"},"Test Data"),(0,i.kt)("p",null,"Data for the campaign results can be accessed at ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift_Test"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},"data(GeoLift_Test)\n")),(0,i.kt)("p",null,"Similarly to the process executed at the beginning of the Power Analysis\nphase, we read the data into GeoLift\u2019s format using the ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoDataRead"),"\nfunction."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'GeoTestData_Test <- GeoDataRead(data = GeoLift_Test,\n                                    date_id = "date",\n                                    location_id = "location",\n                                    Y_id = "Y",\n                                    format = "yyyy-mm-dd")\nhead(GeoTestData_Test)\n#>   location time    Y\n#> 1  atlanta    1 3384\n#> 2  atlanta    2 3904\n#> 3  atlanta    3 5734\n#> 4  atlanta    4 4311\n#> 5  atlanta    5 3686\n#> 6  atlanta    6 3374\n')),(0,i.kt)("p",null,"The results can also be plotted using the ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoPlot")," function. However,\nfor post-campaign data we can include the time-stamp at which the\ncampaign started through the treatment","_","start parameter to clearly\nseparate the two periods. Plotting the time-series is always useful to\ndetect any anomalies with the data and to start noticing patterns with\nthe test."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'GeoPlot(GeoTestData_Test,\n        Y_id = "Y",\n        time_id = "time",\n        location_id = "location",\n        treatment_start = 91)\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"GeoPlotTestData",src:n(1987).Z})),(0,i.kt)("h3",{id:"geolift-inference"},"GeoLift Inference"),(0,i.kt)("p",null,"The next step in the process is to calculate the actual Lift caused by\nthe marketing campaigns on our test locations. To do so we make use of\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"GeoLift")," function, which will take as input the GeoLift dataframe\nas well as information about the test such as which were the cities in\nthe treatment group, when the test started, and when it ended through\nthe locations, treatment","_","start","_","time, and treatment","_","end","_","time\nparameters respectively."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'GeoTest <- GeoLift(Y_id = "Y",\n                    data = GeoTestData_Test,\n                    locations = locs,\n                    treatment_start_time = 91,\n                    treatment_end_time = 105)\n#>\n#> GeoLift Output\n#>\n#> Test results for 15 treatment periods, from time-stamp 91 to 105 for test markets:\n#> 1 CHICAGO\n#> 2 PORTLAND\n#> ##################################\n#> #####     Test Statistics    #####\n#> ##################################\n#>\n#> Percent Lift: 5.4%\n#>\n#> Incremental Y: 4667\n#>\n#> Average Estimated Treatment Effect (ATT): 155.556\n#>\n#> The results are significant at a 95% level.\n#>\n#> There is a 0.5% chance of observing an effect this large or larger assuming treatment effect is zero.\n')),(0,i.kt)("p",null,"The results show that the campaigns led to a 5.4% lift in units sold\ncorresponding to 4667 incremental units sold for this 15-day test.\nMoreover, the Average Estimated Treatment Effect (also known as ATT) is\nof 155.556 units every day of the test. Most importantly, we observe\nthat these results are statistically significant at a 95% level. In\nfact, there\u2019s only a 1.1% chance of observing an effect of this\nmagnitude or larger if the actual treatment effect was zero. In other\nwords, it is extremely unlikely that these results are just due to\nchance. To dig deeper into the results, we can run the summary of our\nGeoLift object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},"summary(GeoTest)\n#>\n#> GeoLift Results Summary\n#> ##################################\n#> #####     Test Statistics    #####\n#> ##################################\n#>\n#> * Average ATT: 155.556\n#> * Percent Lift: 5.4%\n#> * Incremental Y: 4667\n#> * P-value: 0\n#>\n#> ##################################\n#> #####   Balance Statistics   #####\n#> ##################################\n#>\n#> * L2 Imbalance: 909.489\n#> * Scaled L2 Imbalance: 0.1636\n#> * Percent improvement from naive model: 83.64%\n#> * Average Estimated Bias: NA\n#>\n#> ##################################\n#> #####     Model Weights      #####\n#> ##################################\n#>\n#> * Prognostic Function: NONE\n#>\n#> * Model Weights:\n#>  * austin: 0.0465\n#>  * baton rouge: 0.1335\n#>  * cincinnati: 0.2272\n#>  * dallas: 0.0739\n#>  * honolulu: 0.0673\n#>  * houston: 0.0046\n#>  * miami: 0.2028\n#>  * minneapolis: 0.09\n#>  * nashville: 0.0685\n#>  * new york: 0.0046\n#>  * reno: 0.0306\n#>  * san antonio: 0.0054\n#>  * san diego: 0.0451\n")),(0,i.kt)("p",null,"The summary show additional test statistics such as the p-value which\nwas equal to 0.01 confirming the highly statistical significance of\nthese results. Moreover, the summary function provides Balance\nStatistics which display data about our model\u2019s fit. The main metric of\nmodel fit used in GeoLift is the L2 Imbalance which represents how far\nour synthetic control was from the actual observed values in the\npre-treatment period. That is, how similar the synthetic Chicago +\nPortland unit we crated is from the observed values of these cities in\nthe period before the intervention. A small L2 Imbalance score means\nthat our model did a great job replicating our test locations while a\nlarge one would indicate a poor fit. However, the L2 Imabalnce metric is\nscale-dependent, meaning that it can\u2019t be compared between models with\ndifferent KPIs or number of testing periods. For instance, the L2\nImbalance of a model run on units sold will be significantly larger than\na model ran for tons of product sold even if they represent the same\nbasic underlying metric."),(0,i.kt)("p",null,"Therefore, given that it\u2019s hard to tell simply by looking at the value\nof the L2 Imbalance metric whether the model had a good or poor fit, we\nalso included the Scaled L2 Imbalance stat which is easier to interpret\nas it\u2019s bounded in the range between 0 and 1. A value close to zero\nrepresents a good model fit while values nearing 1 indicate a poor\nperformance by the Synthetic Control Model. This scaling is accomplished\nby comparing the Scaled L2 Imbalance of our Synthetic Control Method\nwith the Scaled L2 Imbalance obtained by a baseline/naive model (instead\nof carefully calculating which is the optimal weighting scheme for the\nSynthetic Control, we assign equal weights to each unit in the donor\npool). The latter provides an upper bound of L2 Imbalance, therefore,\nthe Scaled L2 Imbalance shows us how much better our GeoLift model is\nfrom the baseline."),(0,i.kt)("p",null,"In fact, another way to look at the Scaled L2 Imbalance is the percent\nimprovement from a naive model which can be obtained by subtracting our\nmodel\u2019s Scaled L2 Imbalance from 100%. In this case, an improvement\nclose to 100% (which corresponds to a Scaled L2 Imbalance close to zero)\nrepresents a good model fit. Finally, we also include the weights that\ngenerate our Synthetic Control. In this test we note that the locations\nthat contribute the most to our GeoLift model are Cincinnati, Miami, and\nBaton Rouge."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'plot(GeoTest, type = "Lift")\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"LiftPlot",src:n(6496).Z})),(0,i.kt)("p",null,"Plotting the results is a great way to assess the model\u2019s fit and how\neffective the campaign was. Taking a close look at the pre-treatment\nperiod (white background) provides insight into how well our Synthetic\nControl Model fitted our data. In this specific example, we see that the\nobserved values of the Chicago + Portland test represented in the solid\nblack line were closely replicated by our model shown as the dashed red\nline. Furthermore, looking at the test period, we can notice the\ncampaign\u2019s incrementality shown as the difference between the sales\nobserved in the test markets and our counterfactual synthetic location.\nThis marked difference between an almost-exact match in pre-treatment\nperiods and gap in test time-stamps provides strong evidence of a\nsuccessful campaign."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'plot(GeoTest, type = "ATT")\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"PlotATT",src:n(6685).Z})),(0,i.kt)("p",null,"Looking at the Average Estimated Treatment Effect\u2019s plot can also be\nextremely useful. The ATT metric shows us the magnitude of the Average\nTreatment Effect on a daily basis in contrast with the previous (Lift)\nplot which focused on aggregated effects. Moreover, this is a great\nexample of a good GeoLift model as it has very small ATT values in the\npre-treatment period and large ones when the treatment is administered\nto our test locations. Moreover, point-wise confidence intervals are\nincluded in this chart which help us measure how meaningful each day\nLift has been."),(0,i.kt)("h3",{id:"improving-the-model"},"Improving The Model"),(0,i.kt)("p",null,"While the results obtained from the test are robust and highly\nsignificant, a useful feature of GeoLift is its ability to improve the\nmodel fit even further and reduce bias through augmentation by a\nprognostic function. There are several options for augmentation of the\nstandard GeoLift model such as regularization (specifically Ridge) and a\napplication of Generalized Synthetic Control Model (GSC). While each of\nthese approaches provide it\u2019s own set of advantages, for instance Ridge\nregularization usually performs well when the number of units and\ntime-periods isn\u2019t large while GSC helps improve fit for situations with\nmany pre-treatment periods, GeoLift offers the option to let the model\ndecide which is the best approach by setting the model parameter to\n\u201cbest\u201d."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'GeoTestBest <- GeoLift(Y_id = "Y",\n                        data = GeoTestData_Test,\n                        locations = locs,\n                        treatment_start_time = 91,\n                        treatment_end_time = 105,\n                        model = "best")\n#>\n#> GeoLift Output\n#>\n#> Test results for 15 treatment periods, from time-stamp 91 to 105 for test markets:\n#> 1 CHICAGO\n#> 2 PORTLAND\n#> ##################################\n#> #####     Test Statistics    #####\n#> ##################################\n#>\n#> Percent Lift: 5.5%\n#>\n#> Incremental Y: 4704\n#>\n#> Average Estimated Treatment Effect (ATT): 156.805\n#>\n#> The results are significant at a 95% level.\n#>\n#> There is a 1.2% chance of observing an effect this large or larger assuming treatment effect is zero.\n\nsummary(GeoTestBest)\n#>\n#> GeoLift Results Summary\n#> ##################################\n#> #####     Test Statistics    #####\n#> ##################################\n#>\n#> * Average ATT: 156.805\n#> * Percent Lift: 5.5%\n#> * Incremental Y: 4704\n#> * P-value: 0.01\n#>\n#> ##################################\n#> #####   Balance Statistics   #####\n#> ##################################\n#>\n#> * L2 Imbalance: 903.525\n#> * Scaled L2 Imbalance: 0.1626\n#> * Percent improvement from naive model: 83.74%\n#> * Average Estimated Bias: -1.249\n#>\n#> ##################################\n#> #####     Model Weights      #####\n#> ##################################\n#>\n#> * Prognostic Function: RIDGE\n#>\n#> * Model Weights:\n#>  * atlanta: 3e-04\n#>  * austin: 0.0467\n#>  * baltimore: 1e-04\n#>  * baton rouge: 0.1337\n#>  * boston: -4e-04\n#>  * cincinnati: 0.2273\n#>  * columbus: 1e-04\n#>  * dallas: 0.0741\n#>  * denver: 1e-04\n#>  * detroit: 1e-04\n#>  * honolulu: 0.0674\n#>  * houston: 0.0048\n#>  * indianapolis: 1e-04\n#>  * jacksonville: -1e-04\n#>  * kansas city: -1e-04\n#>  * los angeles: 2e-04\n#>  * memphis: -2e-04\n#>  * miami: 0.2029\n#>  * milwaukee: -2e-04\n#>  * minneapolis: 0.0901\n#>  * nashville: 0.0687\n#>  * new orleans: -2e-04\n#>  * new york: 0.0048\n#>  * oakland: -0.001\n#>  * oklahoma city: -7e-04\n#>  * orlando: 1e-04\n#>  * philadelphia: -4e-04\n#>  * reno: 0.0308\n#>  * saint paul: 2e-04\n#>  * salt lake city: -3e-04\n#>  * san antonio: 0.0056\n#>  * san diego: 0.0452\n#>  * san francisco: 1e-04\n#>  * tucson: -1e-04\nplot(GeoTestBest, type = "Lift")\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"PlotLiftBest",src:n(790).Z})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'plot(GeoTestBest, type = "ATT")\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"PlotATTBest",src:n(6598).Z})),(0,i.kt)("p",null,"The new results augment the GeoLift model with a Ridge prognostic\nfunction which improves the model fit as seen in the new L2 Imbalance\nmetrics. This additional robustness is translated in a small increase in\nthe Percent Lift. Furthermore, by augmenting the model with a prognostic\nfunction, we have an estimate of the estimated bias."))}u.isMDXComponent=!0},790:function(e,t,n){t.Z=n.p+"assets/images/GeoLiftBest-1-54bcb65bacb9c801e5fc64cf4c3d4c25.png"},6598:function(e,t,n){t.Z=n.p+"assets/images/GeoLiftBest-2-c0ad18aac6947aa0d562f37e7c85cc0e.png"},3436:function(e,t,n){t.Z=n.p+"assets/images/geoliftpower-1-55c33220e7f611a151824d0a8415a801.png"},7362:function(e,t,n){t.Z=n.p+"assets/images/geoliftpower-2-63add0668d3b554243fc67010f30899c.png"},5974:function(e,t,n){t.Z=n.p+"assets/images/numberlocations-1-a4862453718d8da664609e320f4255ba.png"},6685:function(e,t,n){t.Z=n.p+"assets/images/plot_ATT-1-11c6a674ae4bb5207a72f2ab98b6777a.png"},6496:function(e,t,n){t.Z=n.p+"assets/images/plot_Lift-1-0c0ac37a30894e29a3fa5b959cd10c9f.png"},5755:function(e,t,n){t.Z=n.p+"assets/images/plotting-1-2c326791d205a65f63c30cb675f52e98.png"},1987:function(e,t,n){t.Z=n.p+"assets/images/plottingTest-1-0a25898315721e1b9ba8bbb0dea5dbbe.png"},5882:function(e,t,n){t.Z=n.p+"assets/images/powerfinder-1-8c32ac91078b3d659deb2487f9bb03fd.png"},2234:function(e,t,n){t.Z=n.p+"assets/images/powerfinder-2-9aa9b10feeb09430fe33031e58ca7966.png"}}]);