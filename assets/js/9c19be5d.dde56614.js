"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[166],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,u=p["".concat(l,".").concat(d)]||p[d]||h[d]||o;return n?a.createElement(u,r(r({ref:t},m),{},{components:n})):a.createElement(u,r({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},353:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return m},default:function(){return p}});var a=n(3117),i=n(102),o=(n(7294),n(3905)),r=["components"],s={sidebar_position:2},l="GeoLift Walkthrough",c={unversionedId:"GettingStarted/Walkthrough",id:"GettingStarted/Walkthrough",title:"GeoLift Walkthrough",description:"---",source:"@site/docs/GettingStarted/Walkthrough.md",sourceDirName:"GettingStarted",slug:"/GettingStarted/Walkthrough",permalink:"/GeoLift/docs/GettingStarted/Walkthrough",editUrl:"https://github.com/facebookincubator/GeoLift/docs/GettingStarted/Walkthrough.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started with GeoLift",permalink:"/GeoLift/docs/GettingStarted/InstallingR"},next:{title:"GeoLift Methodology",permalink:"/GeoLift/docs/Methodology/"}},m=[{value:"1. Data and R Environment",id:"1-data-and-r-environment",children:[{value:"Set-up of the R Environment",id:"set-up-of-the-r-environment",children:[],level:3},{value:"Data",id:"data",children:[{value:"<strong>Note:</strong> Before reading the data into this format, always make sure that there are no missing variables, <code>NAs</code>, or locations with missing time-stamps as those will be dropped by the <code>GeoDataRead()</code> function.",id:"note-before-reading-the-data-into-this-format-always-make-sure-that-there-are-no-missing-variables-nas-or-locations-with-missing-time-stamps-as-those-will-be-dropped-by-the-geodataread-function",children:[],level:4}],level:3}],level:2},{value:"2. Power Analysis",id:"2-power-analysis",children:[{value:"<strong>Note:</strong> Given that we are not using the complete pre-treatment data to calculate the weights in our power analysis simulations, the ones displayed by the plotting function above are not the <em>final</em> values. However, you can easily obtain them with the <code>GetWeights()</code> function.",id:"note-given-that-we-are-not-using-the-complete-pre-treatment-data-to-calculate-the-weights-in-our-power-analysis-simulations-the-ones-displayed-by-the-plotting-function-above-are-not-the-final-values-however-you-can-easily-obtain-them-with-the-getweights-function",children:[],level:4}],level:2},{value:"3. Analyzing the Test Results",id:"3-analyzing-the-test-results",children:[{value:"Test Data",id:"test-data",children:[],level:3},{value:"GeoLift Inference",id:"geolift-inference",children:[],level:3},{value:"Improving The Model",id:"improving-the-model",children:[],level:3}],level:2}],h={toc:m};function p(e){var t=e.components,s=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},h,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"geolift-walkthrough"},"GeoLift Walkthrough"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"1-data-and-r-environment"},"1. Data and R Environment"),(0,o.kt)("h3",{id:"set-up-of-the-r-environment"},"Set-up of the R Environment"),(0,o.kt)("p",null,"After installing the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift")," package, it's important to load it into our R session."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"library(GeoLift)\n")),(0,o.kt)("h3",{id:"data"},"Data"),(0,o.kt)("p",null,"To show an end-to-end implementation of GeoLift we will use simulated\ndata of 40 US cities across 90 days to: design a test, select test\nmarkets, run power calculations, and finally calculate the Lift caused\nby the campaign. As with every GeoLift test, we start analyzing pre-test\nhistorical information. We will use the data included in the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift"),"\npackage."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"data(GeoLift_PreTest)\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift_PreTest")," data set contains three variables:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"location (city)"),(0,o.kt)("li",{parentName:"ol"},"date (in \u201cyyyy-mm-dd\u201d format)"),(0,o.kt)("li",{parentName:"ol"},"Y (number of conversions/KPI in each day/location).")),(0,o.kt)("p",null,"Every GeoLift experiment should contain at least these three variables\nthat reflect when, where, and how much of the KPI was measured.\nNevertheless, if you have more data available, you can include\ncovariates to GeoLift to improve our results through the ",(0,o.kt)("inlineCode",{parentName:"p"},"X")," parameter\nof all GeoLift functions."),(0,o.kt)("p",null,"The first step to run a ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift")," test is to read the data into the\nproper format using the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoDataRead")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,\n                                        date_id = "date",\n                                        location_id = "location",\n                                        Y_id = "Y",\n                                        X = c(), #empty list as we have no covariates\n                                        format = "yyyy-mm-dd",\n                                        summary = TRUE)\n\n    #> ##################################\n    #> #####       Summary       #####\n    #> ##################################\n    #>\n    #> * Raw Number of Locations: 40\n    #> * Time Periods: 90\n    #> * Final Number of Locations (Complete): 40\n\n    head(GeoTestData_PreTest)\n    #>   location time    Y\n    #> 1  atlanta    1 3384\n    #> 2  atlanta    2 3904\n    #> 3  atlanta    3 5734\n    #> 4  atlanta    4 4311\n    #> 5  atlanta    5 3686\n    #> 6  atlanta    6 3374\n')),(0,o.kt)("p",null,"This function analyzes the data set, handles locations with missing\ndata, and returns a data frame with time-stamps instead of dates. In\nthis case, since we\u2019re inputting daily data each time unit represents a\nday."),(0,o.kt)("h4",{id:"note-before-reading-the-data-into-this-format-always-make-sure-that-there-are-no-missing-variables-nas-or-locations-with-missing-time-stamps-as-those-will-be-dropped-by-the-geodataread-function"},(0,o.kt)("strong",{parentName:"h4"},"Note:")," Before reading the data into this format, always make sure that there are no missing variables, ",(0,o.kt)("inlineCode",{parentName:"h4"},"NAs"),", or locations with missing time-stamps as those will be dropped by the ",(0,o.kt)("inlineCode",{parentName:"h4"},"GeoDataRead()")," function."),(0,o.kt)("p",null,"A good next step is to plot the panel data with ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoPlot")," to observe\nit\u2019s trend, contribution per location, and also to detect any data\nanomalies before moving on to the data analysis."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'GeoPlot(GeoTestData_PreTest,\n        Y_id = "Y",\n        time_id = "time",\n        location_id = "location")\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"GeoPlot",src:n(5755).Z})),(0,o.kt)("p",null,"In this case we see a similar pattern that\u2019s shared across all\nlocations. These structural similarities between regions are the key to\na successful test!"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"2-power-analysis"},"2. Power Analysis"),(0,o.kt)("p",null,"Running a prospective power analysis is fundamental prior to executing a\ntest. It is only through a thorough statistical analysis of our data\nthat we can set it up for success. In general, through the power\nanalysis we can find:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The optimal number of test locations.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Best test duration.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Select the ideal test and control markets.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Get a good estimate of the budget needed to run the test.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Determine which is the Minimum Detectable Effect to obtain\nsignificant results.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Align expectations."))),(0,o.kt)("p",null,"Assessing the power and selecting the test markets for a GeoLift test\ncan be accomplished through the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLiftMarketSelection()")," function.\nThrough a series of simulations, this algorithm will find which are the\nbest combinations of test and control locations for the experiment.\nMoreover, for each of these test market selections, the function will\ndisplay the Minimum Detectable Effect, minimum investment needed to run\na successful test, and other important model-fit metrics that will help\nus select the test that best matches our goals and resources."),(0,o.kt)("p",null,"The key parameters needed to run this function are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"data"),": A data frame containing the historical conversions by\ngeographic unit. This object must contain at least a \u201clocation\u201d\ncolumn with the geo name, a \u201cY\u201d column with the outcome data (such\nas units), a \u201ctime\u201d column with the indicator of the time period\n(starting at 1), and covariates (if available). Using the data frame\ngenerated by ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoDataRead()")," is the best way to make sure we have\nthe correct format. For this example, we will use\n",(0,o.kt)("inlineCode",{parentName:"p"},"GeoTestData_PreTest"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"treatment_periods"),": List of treatment periods to calculate power\nfor. If we\u2019re unsure of the ideal test duration, we can specify and\nassess the power of different durations. The ideal test length\nheavily depends on the product and vertical we are working with.\nNevertheless, a good rule of thumb when deciding duration is to make\nsure that the test period can contain ",(0,o.kt)("strong",{parentName:"p"},"at least")," one full purchase\ncycle. Given that we have daily data in our example, we will analyze\nthe power of 10 and 15-day tests by setting this parameter to\n",(0,o.kt)("inlineCode",{parentName:"p"},"c(10,15)"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"N"),": List of number of test markets to calculate power for. The\nvalues in this list represent the different test-market sizes we\nwant to explore. This parameter is often guided by the budget and\nscope of the test we want to implement. For our example, we will\nanalyze smaller tests with two, three, and four test markets (the\nremaining would be part of the control). We will do so by setting\nthis parameter to ",(0,o.kt)("inlineCode",{parentName:"p"},"c(2,3,4)"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"X")," (Optional): List of the names of the covariates in the ",(0,o.kt)("inlineCode",{parentName:"p"},"data"),".\nIn our example we don\u2019t have any covariates so we\u2019ll leave it empty.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"Y_id"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"location_id"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"time_id"),": Names of the outcome,\nlocation, and time variables (String). These parameters will let our\nfunction know are the names of these variables in our data frame. If\nleft empty, this parameter will default to the defaults of\n",(0,o.kt)("inlineCode",{parentName:"p"},"GeoDataRead()")," which are: ",(0,o.kt)("inlineCode",{parentName:"p"},"Y"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"location"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"time"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"effect_size"),": This parameter contains a vector of different effect\nsizes (or lifts) we want to simulate. Since these are relative\nvalues, they do depend on the product and vertical we\u2019re analyzing.\nFor instance, while a small single-digit percent increase in volume\nfor a retailer can translate to millions of units, a large lift\nmight be required for an automotive company that sells fewer\nproducts per day. By default this parameter is set to a sequence of\nlifts between 0 and 25 percent with 5% increments, that is,\n",(0,o.kt)("inlineCode",{parentName:"p"},"seq(0,0.25,0.05)"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"lookback_window"),": A number indicating how far back in time the\nsimulations for the power analysis should go. For instance, a value\nequal to 5 would simulate power for the last five possible tests. In\ngeneral, when the historical data is stable (it doesn\u2019t vary wildly\nfrom one day/region to another) we can obtain a very robust and\nreliable power analysis by just looking into the most recent\npossible test (in other words, ",(0,o.kt)("inlineCode",{parentName:"p"},"lookback_window = 1"),"). It is\nimportant to mention that increasing the values in this parameter\ncan significantly increase the algorithm\u2019s run-time.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"include_markets"),": A list of markets or locations that should be\npart of the test group. Assuming that we need to have Chicago as\npart of our test regions, we will set this parameter to\n",(0,o.kt)("inlineCode",{parentName:"p"},'include_markets = c("chicago")'),". Make sure the spelling of\nlocations in this lists matches with the data.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"exclude_markets"),": A list of markets or locations that won\u2019t be\nconsidered for the test market selection, but will remain in the\npool of controls. In our example, we will set\n",(0,o.kt)("inlineCode",{parentName:"p"},'exclude_markets = c("honolulu")')," to make sure that only cities in\nthe continental US will be part of the test group. As with\n",(0,o.kt)("inlineCode",{parentName:"p"},"include_locations"),", always make sure the spelling of locations in\nthis lists matches with the data.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"holdout"),": A vector with two values: the first one the smallest\ndesirable holdout and the second the largest desirable holdout. The\nholdout represents the share of conversions from markets that will\nnot see our ad campaign. In our example, will specify that we\u2019re OK\nwith a large holdout and will therefore set ",(0,o.kt)("inlineCode",{parentName:"p"},"holdout = c(0.5, 1)"),".\nIf this parameter is left empty, all market selections will be\nanalyzed regardless of their size.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"cpic"),": Value indicating the Cost Per Incremental Conversion, that\nis, on average how much do we typically need to spend to bring one\nincremental conversion. CPIC estimates can typically be obtained\nfrom Marketing Mix Models, Conversion Lifts, and previous\nexperiments/geo-experiments. This value is key to get a good\nestimate of the budget that we will need to run a well-powered test.\nIf there is no reliable information about the Cost Per Incremental\nConversion, the default will be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"cpic = 1"),", in which case,\nthe investment results will output the incremental units needed for\na successful test.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"budget"),": Optional parameter that indicates the maximum budget\navailable for a GeoLift test. If no budget is provided, all market\nselections will be analyzed by the algorithm.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"alpha"),": This parameter controls the significance Level that will be\nused by our model. By default ",(0,o.kt)("inlineCode",{parentName:"p"},"alpha = 0.1")," which is equivalent to a\n90% confidence level.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"model"),": A string that indicates the outcome model used to augment\nthe Augmented Synthetic Control Method. Augmentation through a\nprognostic function can improve fit and reduce L2 imbalance metrics.\nThe most common values used are: ",(0,o.kt)("inlineCode",{parentName:"p"},'model = "None"')," (default) which\nwon\u2019t augment the ASCM and ",(0,o.kt)("inlineCode",{parentName:"p"},'model = "Ridge"'),". More information on\nthis parameter is given in the ",(0,o.kt)("strong",{parentName:"p"},"Inference")," section of this\nwalkthrough.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"fixed_effects"),": A logic flag indicating whether to include unit\nFixed Effects (FE) in the model. Fixed effects are an additional\nparameter that we can include into our models which represents a\nnon-random component in our data. More specifically, in our model\nthe FE represents the \u201clevel\u201d of each region\u2019s time-series across\nthe data. By adding the FE we effectively remove this level - this\nallows our model to focus on explaining the variations from that\nlevel rather than the full value of Y. This is helpful when the\nseries are stable across time. However, if the series isn\u2019t stable\n(it has large spikes/valleys, has a clear trend, etc.), then it can\nactually be a detriment to our model. By default, this parameter is\nset to ",(0,o.kt)("inlineCode",{parentName:"p"},"fixed_effects = TRUE"),". A close inspection of ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoPlot"),"\u2019s\noutput combined with knowledge of the data is key to specify this\nparameter. In our example, we will set ",(0,o.kt)("inlineCode",{parentName:"p"},"fixed_effects = TRUE")," given\nthat we can observe a stable behavior of sales across our markets in\nthe historical data.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"Correlations"),": A logic flag indicating whether an additional column\nto the output with the correlations between the test regions and\ncontrol markets. Given that not all locations in the pool of\ncontrols will contribute meaningfully to create our\ncounterfactual/synthetic test region, the correlations can be a\ngreat resource to know how representative our test region is which\ncan inform other analyses such as Marketing Mix Model calibration.\nBy default this parameter is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"Correlations = FALSE"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"print"),": print A logic flag indicating whether to print the top\nresults. Set to TRUE by default.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"parallel"),": A logic flag indicating whether to use parallel\ncomputing to speed up calculations. Set to TRUE by default.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"parallel_setup"),": A string indicating parallel workers set-up. Set\nto ",(0,o.kt)("inlineCode",{parentName:"p"},'parallel_setup = "sequential"')," by default but can also be\ndefined as ",(0,o.kt)("inlineCode",{parentName:"p"},'parallel_setup = "parallel"'),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"side_of_test"),": A string indicating whether confidence will be\ndetermined using a one sided or a two sided test. These are the\nfollowing valid values for this parameter:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'side_of_test = "two_sided"'),": The test statistic is the sum of\nall treatment effects, i.e. sum(abs(x)). Defualt."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'side_of_test = "one_sided"'),": One-sided test against positive or\nnegative effects i.e. If the effect being applied is negative,\nthen defaults to -sum(x). If the effect being applied is\npositive, then defaults to sum(x).")))),(0,o.kt)("p",null,"Continuing with the example and in order to explore the function\u2019s\ncapabilities let\u2019s assume we have two restrictions: Chicago must be part\nof the test markets and we have up to $100,000 to run the test. We can\ninclude these constraints into ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLiftMarketSelection()")," with the\n",(0,o.kt)("inlineCode",{parentName:"p"},"include_markets")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"budget")," parameters and proceed with the market\nselection. Moreover, after observing that the historical KPI values in\n",(0,o.kt)("inlineCode",{parentName:"p"},"GeoPlot()")," have been stable across time we will proceed with a model\nwith Fixed Effects. Finally, given a CPIC = $7.50 obtained from a\nprevious Lift test, a range between two to five test markets, and a\nduration between 10 and 15 days we obtain:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"    MarketSelections <- GeoLiftMarketSelection(data = GeoTestData_PreTest,\n                                              treatment_periods = c(10,15),\n                                              N = c(2,3,4,5),\n                                              Y_id = \"Y\",\n                                              location_id = \"location\",\n                                              time_id = \"time\",\n                                              effect_size = seq(0, 0.5, 0.05),\n                                              lookback_window = 1,\n                                              include_markets = c(\"chicago\"),\n                                              exclude_markets = c(\"honolulu\"),\n                                              holdout = c(0.5, 1),\n                                              cpic = 7.50,\n                                              budget = 100000,\n                                              alpha = 0.1,\n                                              Correlations = TRUE,\n                                              fixed_effects = TRUE)\n    #> Setting up cluster.\n    #> Importing functions into cluster.\n    #> Attempting to load the environment 'package:dplyr'\n    #>\n    #> Attaching package: 'dplyr'\n    #> The following objects are masked from 'package:stats':\n    #>\n    #>     filter, lag\n    #> The following objects are masked from 'package:base':\n    #>\n    #>     intersect, setdiff, setequal, union\n    #> Attempting to load the environment 'package:tidyr'\n    #>\n    #> Deterministic setup with 2 locations in treatment.\n    #>\n    #> Deterministic setup with 3 locations in treatment.\n    #>\n    #> Deterministic setup with 4 locations in treatment.\n    #>\n    #> Deterministic setup with 5 locations in treatment.\n    #>   ID                                           location duration EffectSize\n    #> 1  1             chicago, cincinnati, houston, portland       15       0.05\n    #> 2  2                                  chicago, portland       15       0.10\n    #> 3  3             chicago, cincinnati, houston, portland       10       0.10\n    #> 4  4                                  chicago, portland       10       0.10\n    #> 5  5                         chicago, houston, portland       10       0.10\n    #> 6  6 chicago, cincinnati, houston, nashville, san diego       15       0.05\n    #>   Power AvgScaledL2Imbalance Investment   AvgATT Average_MDE ProportionTotal_Y\n    #> 1     1            0.1971864   74118.38 159.3627  0.04829913        0.07576405\n    #> 2     1            0.1738778   64563.75 290.0071  0.10117316        0.03306537\n    #> 3     1            0.1966996   99027.75 316.6204  0.09552879        0.07576405\n    #> 4     1            0.1682310   43646.25 300.9401  0.10378013        0.03306537\n    #> 5     1            0.2305628   75389.25 350.3142  0.10502968        0.05797087\n    #> 6     1            0.2699167   95755.50 146.7975  0.04282215        0.09801138\n    #>   abs_lift_in_zero   Holdout rank correlation\n    #> 1            0.002 0.9242359    1   0.9144814\n    #> 2            0.001 0.9669346    1   0.9321104\n    #> 3            0.004 0.9242359    3   0.9144814\n    #> 4            0.004 0.9669346    3   0.9321104\n    #> 5            0.005 0.9420291    5   0.9139549\n    #> 6            0.007 0.9019886    6   0.8992280\n")),(0,o.kt)("p",null,"The results of the power analysis and market selection provide us with\nseveral key metrics that we can use to select our test market. These\nmetrics are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"ID"),": Numeric ID that identifies a combination of test markets for\na given duration. This variable will be useful to plot the results.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"location"),": Identifies the test locations.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"duration"),": Shows how many time-stamps the test will last for.\nSince the data in our example had daily values, we will analyze\nwhether a 10 or 15 day test is ideal.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"EffectSize"),": The Effect Size represents minimum Lift needed to\nhave a well-powered test. These values depend on the ",(0,o.kt)("inlineCode",{parentName:"p"},"effect_size"),"\nparameter of this function. Therefore, if you see multiple ties\nacross top candidates for our test markets, then it might be a good\nidea to increase the granularity in this parameter (for example to\n",(0,o.kt)("inlineCode",{parentName:"p"},"seq(0, 0.25, 0.01)"),").")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Power"),": The row\u2019s average power across all simulations at the\nspecified ",(0,o.kt)("inlineCode",{parentName:"p"},"Effect Size"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"AvgScaledL2Imbalance"),": The Scaled L2 Imbalance metric is a\ngoodness of fit metric between 0 and 1 that represents how well the\nmodel is predicting the pre-treatment observed values through the\nSynthetic Control. Scaled L2 Imbalance values of 0 show a perfect\nmatch of pre-treatment values. Scaled L2 Imbalance values of 1 show\nthat the Synthetic Control algorithm is not adding much value beyond\nwhat you could accomplish with a simple average of control locations\n(naive model).")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Investment"),": The average investment needed to obtain a\nwell-powered test given a CPIC.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"AvgATT"),": The ATT is a metric of how many incremental units, on\naverage, our test markets will have across each time-stamp for the\nduration of the test for a given set of test markets, duration, and\nEffect Size.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Average","_","MDE"),": The average Minimum Detectable Effect across all\nsimulations.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"ProportionTotal","_","Y"),": This proportion reflects the fraction of all\nconversions that happen in our test regions compared to the\naggregation of all markets. For example, a value of 0.10 would\nindicate that our test markets represent 10% of all conversions for\nour KPI.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"abs","_","lift","_","in","_","zero"),": This value represents the average estimated\nlift our test markets had when we actually simulated a 0% Lift in\nconversions. Great test market selections often have values of\nabs","_","lift","_","in","_","zero very close to zero.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Holdout"),": The percent of total conversions in the control\nmarkets. This value is complementary to ",(0,o.kt)("strong",{parentName:"p"},"ProportionTotal","_","Y"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"rank"),": Ranking variable that summarizes the EffectSize, Power,\nAvgScaledL2Imbalance, Average","_","MDE, and abs","_","lift","_","in","_","zero to help\nyou select the best combination of test markets. The ranking\nvariable allows for ties."))),(0,o.kt)("p",null,"The results in ",(0,o.kt)("inlineCode",{parentName:"p"},"MarketSelection")," show that the test markets with the\nbest ranks are: ",(0,o.kt)("inlineCode",{parentName:"p"},"(chicago, cincinnati, houston, portland)")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"(chicago, portland)"),", both tied at rank 2. We can ",(0,o.kt)("inlineCode",{parentName:"p"},"plot()")," both of\nthese results to inspect them further. This plot will show how the\nresults of the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift()")," model would look like with the latest\npossible test period as well as the test\u2019s power curve across all\nsimulations."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"    # Plot for chicago, cincinnati, houston, portland for a 15 day test\n    plot(MarketSelections, market_ID = 1, print_summary = FALSE)\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"GeoPlot",src:n(8959).Z})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"    # Plot for chicago, portland for a 15 day test\n    plot(MarketSelections, market_ID = 2, print_summary = FALSE)\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"GeoPlot",src:n(1938).Z})),(0,o.kt)("p",null,"While both market selections perform excellent on all metrics, we will\nmove further with the latter since it allows us to run a successful test\nwith a smaller budget. Finally, changing the ",(0,o.kt)("inlineCode",{parentName:"p"},"print_summary")," parameter\nof ",(0,o.kt)("inlineCode",{parentName:"p"},"plot()")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"TRUE")," can provide us with additional information about\nthis market selection."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"    # Plot for chicago, portland for a 15 day test\n    plot(MarketSelections, market_ID = 2, print_summary = TRUE)\n    #> ##################################\n    #> #####   GeoLift Simulation   #####\n    #> ####  Simulating: 10% Lift  ####\n    #> ##################################\n    #>\n    #> GeoLift Results Summary\n    #> ##################################\n    #> #####     Test Statistics    #####\n    #> ##################################\n    #>\n    #> * Average ATT: 290.007\n    #> * Percent Lift: 10.1%\n    #> * Incremental Y: 8700\n    #> * P-value: 0\n    #>\n    #> ##################################\n    #> #####   Balance Statistics   #####\n    #> ##################################\n    #>\n    #> * L2 Imbalance: 868.598\n    #> * Scaled L2 Imbalance: 0.1739\n    #> * Percent improvement from naive model: 82.61%\n    #> * Average Estimated Bias: NA\n    #>\n    #> ##################################\n    #> #####     Model Weights      #####\n    #> ##################################\n    #>\n    #> * Prognostic Function: NONE\n    #>\n    #> * Model Weights:\n    #>  * austin: 0.0237\n    #>  * baton rouge: 0.1511\n    #>  * cincinnati: 0.2429\n    #>  * dallas: 0.0644\n    #>  * honolulu: 0.0669\n    #>  * houston: 0.0292\n    #>  * los angeles: 0.0179\n    #>  * miami: 0.2056\n    #>  * minneapolis: 0.0619\n    #>  * nashville: 0.0641\n    #>  * new york: 0.0216\n    #>  * reno: 0.0113\n    #>  * san diego: 0.0394\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"GeoPlot",src:n(7226).Z})),(0,o.kt)("h4",{id:"note-given-that-we-are-not-using-the-complete-pre-treatment-data-to-calculate-the-weights-in-our-power-analysis-simulations-the-ones-displayed-by-the-plotting-function-above-are-not-the-final-values-however-you-can-easily-obtain-them-with-the-getweights-function"},(0,o.kt)("strong",{parentName:"h4"},"Note:")," Given that we are not using the complete pre-treatment data to calculate the weights in our power analysis simulations, the ones displayed by the plotting function above are not the ",(0,o.kt)("em",{parentName:"h4"},"final")," values. However, you can easily obtain them with the ",(0,o.kt)("inlineCode",{parentName:"h4"},"GetWeights()")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    weights <- GetWeights(Y_id = "Y",\n                          location_id = "location",\n                          time_id = "time",\n                          data = GeoTestData_PreTest,\n                          locations = c("chicago", "portland"),\n                          pretreatment_end_time = 90,\n                          fixed_effects = TRUE)\n    #> One outcome and one treatment time found. Running single_augsynth.\n\n    # Top weights\n    head(dplyr::arrange(weights, desc(weight)))\n    #>      location     weight\n    #> 1  cincinnati 0.22717797\n    #> 2       miami 0.20276981\n    #> 3 baton rouge 0.13353743\n    #> 4 minneapolis 0.08997973\n    #> 5      dallas 0.07392298\n    #> 6   nashville 0.06853184\n')),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"3-analyzing-the-test-results"},"3. Analyzing the Test Results"),(0,o.kt)("p",null,"Based on the results of the Power Calculations, a test is set-up in\nwhich a 15-day marketing campaign will be executed in the cities of\nChicago and Portland while the rest of the locations will be put on\nholdout. Following the completion from this marketing campaign, we\nreceive sales data that reflects these results. This new data-set\ncontains the same format and information as the pre-test one but\ncrucially includes results for the duration of the campaign. Depending\non the vertical and product, adding a post-campaign cooldown period\nmight be useful."),(0,o.kt)("h3",{id:"test-data"},"Test Data"),(0,o.kt)("p",null,"Data for the campaign results can be accessed at ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift_Test"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"data(GeoLift_Test)\n")),(0,o.kt)("p",null,"Similarly to the process executed at the beginning of the Power Analysis\nphase, we read the data into GeoLift\u2019s format using the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoDataRead"),"\nfunction. You can observe in the summary output that additional 15\nperiods are contained in the new GeoLift data object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    GeoTestData_Test <- GeoDataRead(data = GeoLift_Test,\n                                        date_id = "date",\n                                        location_id = "location",\n                                        Y_id = "Y",\n                                        X = c(), #empty list as we have no covariates\n                                        format = "yyyy-mm-dd",\n                                        summary = TRUE)\n    #> ##################################\n    #> #####       Summary       #####\n    #> ##################################\n    #>\n    #> * Raw Number of Locations: 40\n    #> * Time Periods: 105\n    #> * Final Number of Locations (Complete): 40\n    head(GeoTestData_Test)\n    #>   location time    Y\n    #> 1  atlanta    1 3384\n    #> 2  atlanta    2 3904\n    #> 3  atlanta    3 5734\n    #> 4  atlanta    4 4311\n    #> 5  atlanta    5 3686\n    #> 6  atlanta    6 3374\n')),(0,o.kt)("p",null,"The results can also be plotted using the ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoPlot")," function. However,\nfor post-campaign data we can include the time-stamp at which the\ncampaign started through the ",(0,o.kt)("inlineCode",{parentName:"p"},"treatment_start")," parameter to clearly\nseparate the two periods. Plotting the time-series is always useful to\ndetect any anomalies with the data and to start noticing patterns with\nthe test."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'GeoPlot(GeoTestData_Test,\n        Y_id = "Y",\n        time_id = "time",\n        location_id = "location",\n        treatment_start = 91)\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"GeoPlotTestData",src:n(1987).Z})),(0,o.kt)("h3",{id:"geolift-inference"},"GeoLift Inference"),(0,o.kt)("p",null,"The next step in the process is to calculate the actual Lift caused by\nthe marketing campaigns on our test locations. To do so we make use of\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift()")," function, which will take as input the GeoLift dataframe\nas well as information about the test such as which were the cities in\nthe treatment group, when the test started, and when it ended through\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"locations"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"treatment_start_time"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"treatment_end_time"),"\nparameters respectively."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    GeoTest <- GeoLift(Y_id = "Y",\n                        data = GeoTestData_Test,\n                        locations = c("chicago", "portland"),\n                        treatment_start_time = 91,\n                        treatment_end_time = 105)\n    #> One outcome and one treatment time found. Running single_augsynth.\n    #>\n    #> GeoLift Output\n    #>\n    #> Test results for 15 treatment periods, from time-stamp 91 to 105 for test markets:\n    #> 1 CHICAGO\n    #> 2 PORTLAND\n    #> ##################################\n    #> #####     Test Statistics    #####\n    #> ##################################\n    #>\n    #> Percent Lift: 5.4%\n    #>\n    #> Incremental Y: 4667\n    #>\n    #> Average Estimated Treatment Effect (ATT): 155.556\n    #>\n    #> The results are significant at a 95% level. (TOTAL)\n    #>\n    #> There is a 0.6% chance of observing an effect this large or larger assuming treatment effect is zero.\n')),(0,o.kt)("p",null,"The results show that the campaigns led to a 5.4% lift in units sold\ncorresponding to 4667 incremental units for this 15-day test. Moreover,\nthe Average Estimated Treatment Effect is of 155.556 units every day of\nthe test. Most importantly, we observe that these results are\nstatistically significant at a 95% level. In fact, there\u2019s only a 1.1%\nchance of observing an effect of this magnitude or larger if the actual\ntreatment effect was zero. In other words, it is extremely unlikely that\nthese results are just due to chance. To dig deeper into the results, we\ncan run the ",(0,o.kt)("inlineCode",{parentName:"p"},"summary()")," of our ",(0,o.kt)("inlineCode",{parentName:"p"},"GeoLift")," object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"    summary(GeoTest)\n    #>\n    #> GeoLift Results Summary\n    #> ##################################\n    #> #####     Test Statistics    #####\n    #> ##################################\n    #>\n    #> * Average ATT: 155.556\n    #> * Percent Lift: 5.4%\n    #> * Incremental Y: 4667\n    #> * P-value: 0.01\n    #>\n    #> ##################################\n    #> #####   Balance Statistics   #####\n    #> ##################################\n    #>\n    #> * L2 Imbalance: 909.489\n    #> * Scaled L2 Imbalance: 0.1636\n    #> * Percent improvement from naive model: 83.64%\n    #> * Average Estimated Bias: NA\n    #>\n    #> ##################################\n    #> #####     Model Weights      #####\n    #> ##################################\n    #>\n    #> * Prognostic Function: NONE\n    #>\n    #> * Model Weights:\n    #>  * austin: 0.0465\n    #>  * baton rouge: 0.1335\n    #>  * cincinnati: 0.2272\n    #>  * dallas: 0.0739\n    #>  * honolulu: 0.0673\n    #>  * houston: 0.0046\n    #>  * miami: 0.2028\n    #>  * minneapolis: 0.09\n    #>  * nashville: 0.0685\n    #>  * new york: 0.0046\n    #>  * reno: 0.0306\n    #>  * san antonio: 0.0054\n    #>  * san diego: 0.0451\n")),(0,o.kt)("p",null,"The summary show additional test statistics such as the p-value which\nwas equal to 0.01 confirming the highly statistical significance of\nthese results. Moreover, the summary function provides Balance\nStatistics which display data about our model\u2019s fit. The main metric of\nmodel fit used in GeoLift is the L2 Imbalance which represents how far\nour synthetic control was from the actual observed values in the\npre-treatment period. That is, how similar the synthetic Chicago +\nPortland unit we crated is from the observed values of these cities in\nthe period before the intervention. A small L2 Imbalance score means\nthat our model did a great job replicating our test locations while a\nlarge one would indicate a poor fit. However, the L2 Imabalnce metric is\nscale-dependent, meaning that it can\u2019t be compared between models with\ndifferent KPIs or number of testing periods. For instance, the L2\nImbalance of a model run on grams of units sold will be significantly\nlarger than a model ran for tons of product sold even if they represent\nthe same basic underlying metric."),(0,o.kt)("p",null,"Therefore, given that it\u2019s hard to tell whether the model had a good or\npoor fit by simply looking at the value of the L2 Imbalance metric, we\nalso included the Scaled L2 Imbalance stat which is easier to interpret\nas it\u2019s bounded in the range between 0 and 1. A value close to zero\nrepresents a good model fit while values nearing 1 indicate a poor\nperformance by the Synthetic Control Model. This scaling is accomplished\nby comparing the Scaled L2 Imbalance of our Synthetic Control Method\nwith the Scaled L2 Imbalance obtained by a baseline/naive model (instead\nof carefully calculating which is the optimal weighting scheme for the\nSynthetic Control, we assign equal weights to each unit in the donor\npool). The latter provides an upper bound of L2 Imbalance, therefore,\nthe Scaled L2 Imbalance shows us how much better our GeoLift model is\nfrom the baseline."),(0,o.kt)("p",null,"In fact, another way to look at the Scaled L2 Imbalance is the percent\nimprovement from a naive model which can be obtained by subtracting our\nmodel\u2019s Scaled L2 Imbalance from 100%. In this case, an improvement\nclose to 100% (which corresponds to a Scaled L2 Imbalance close to zero)\nrepresents a good model fit. Finally, we also include the weights that\ngenerate our Synthetic Control. In this test we note that the locations\nthat contribute the most to our GeoLift model are Cincinnati, Miami, and\nBaton Rouge."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    plot(GeoTest, type = "Lift")\n    #> You can include dates in your chart if you supply the end date of the treatment. Just specify the treatment_end_date parameter.\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"LiftPlot",src:n(6496).Z})),(0,o.kt)("p",null,"Plotting the results is a great way to assess the model\u2019s fit and how\neffective the campaign was. Taking a close look at the pre-treatment\nperiod (period before the dotted vertical line) provides insight into\nhow well our Synthetic Control Model fitted our data. In this specific\nexample, we see that the observed values of the Chicago + Portland test\nrepresented in the solid black line were closely replicated by our SCM\nmodel shown as the dashed red line. Furthermore, looking at the test\nperiod, we can notice the campaign\u2019s incrementality shown as the\ndifference between the sales observed in the test markets and our\ncounterfactual synthetic location. This marked difference between an\nalmost-exact match in pre-treatment periods and gap in test time-stamps\nprovides strong evidence of a successful campaign."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    plot(GeoTest, type = "ATT")\n    #> You can include dates in your chart if you supply the end date of the treatment. Just specify the treatment_end_date parameter.\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"PlotATT",src:n(6685).Z})),(0,o.kt)("p",null,"Looking at the Average Estimated Treatment Effect\u2019s plot can also be\nextremely useful. The ATT metric shows us the magnitude of the Average\nTreatment Effect on a daily basis in contrast with the previous (Lift)\nplot which focused on aggregated effects. Moreover, this is a great\nexample of a good GeoLift model as it has very small ATT values in the\npre-treatment period and large ones when the treatment is administered\nto our test locations. Moreover, point-wise confidence intervals are\nincluded in this chart which help us measure how significant each day\u2019s\nLift has been."),(0,o.kt)("h3",{id:"improving-the-model"},"Improving The Model"),(0,o.kt)("p",null,"While the results obtained from the test are robust and highly\nsignificant, a useful feature of GeoLift is its ability to improve the\nmodel fit even further and reduce bias through augmentation by a\nprognostic function. There are several options for augmentation of the\nstandard GeoLift model such as regularization (specifically Ridge) and\nan application of Generalized Synthetic Control Model (GSC). While each\nof these approaches provide it\u2019s own set of advantages, for instance\nRidge regularization usually performs well when the number of units and\ntime-periods isn\u2019t large while GSC helps improve fit for situations with\nmany pre-treatment periods, GeoLift offers the option to let the model\ndecide which is the best approach by setting the model parameter to\n\u201cbest\u201d."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    GeoTestBest <- GeoLift(Y_id = "Y",\n                            data = GeoTestData_Test,\n                            locations = c("chicago", "portland"),\n                            treatment_start_time = 91,\n                            treatment_end_time = 105,\n                            model = "best")\n    #> One outcome and one treatment time found. Running single_augsynth.\n    #> One outcome and one treatment time found. Running single_augsynth.\n    #> One outcome and one treatment time found. Running single_augsynth.\n    #> One outcome and one treatment time found. Running single_augsynth.\n    #>\n    #> GeoLift Output\n    #>\n    #> Test results for 15 treatment periods, from time-stamp 91 to 105 for test markets:\n    #> 1 CHICAGO\n    #> 2 PORTLAND\n    #> ##################################\n    #> #####     Test Statistics    #####\n    #> ##################################\n    #>\n    #> Percent Lift: 5.5%\n    #>\n    #> Incremental Y: 4704\n    #>\n    #> Average Estimated Treatment Effect (ATT): 156.805\n    #>\n    #> The results are significant at a 95% level. (TOTAL)\n    #>\n    #> There is a 1.4% chance of observing an effect this large or larger assuming treatment effect is zero.\n\n    summary(GeoTestBest)\n    #>\n    #> GeoLift Results Summary\n    #> ##################################\n    #> #####     Test Statistics    #####\n    #> ##################################\n    #>\n    #> * Average ATT: 156.805\n    #> * Percent Lift: 5.5%\n    #> * Incremental Y: 4704\n    #> * P-value: 0.01\n    #>\n    #> ##################################\n    #> #####   Balance Statistics   #####\n    #> ##################################\n    #>\n    #> * L2 Imbalance: 903.525\n    #> * Scaled L2 Imbalance: 0.1626\n    #> * Percent improvement from naive model: 83.74%\n    #> * Average Estimated Bias: -1.249\n    #>\n    #> ##################################\n    #> #####     Model Weights      #####\n    #> ##################################\n    #>\n    #> * Prognostic Function: RIDGE\n    #>\n    #> * Model Weights:\n    #>  * atlanta: 3e-04\n    #>  * austin: 0.0467\n    #>  * baltimore: 1e-04\n    #>  * baton rouge: 0.1337\n    #>  * boston: -4e-04\n    #>  * cincinnati: 0.2273\n    #>  * columbus: 1e-04\n    #>  * dallas: 0.0741\n    #>  * denver: 1e-04\n    #>  * detroit: 1e-04\n    #>  * honolulu: 0.0674\n    #>  * houston: 0.0048\n    #>  * indianapolis: 1e-04\n    #>  * jacksonville: -1e-04\n    #>  * kansas city: -1e-04\n    #>  * los angeles: 2e-04\n    #>  * memphis: -2e-04\n    #>  * miami: 0.2029\n    #>  * milwaukee: -2e-04\n    #>  * minneapolis: 0.0901\n    #>  * nashville: 0.0687\n    #>  * new orleans: -2e-04\n    #>  * new york: 0.0048\n    #>  * oakland: -0.001\n    #>  * oklahoma city: -7e-04\n    #>  * orlando: 1e-04\n    #>  * philadelphia: -4e-04\n    #>  * reno: 0.0308\n    #>  * saint paul: 2e-04\n    #>  * salt lake city: -3e-04\n    #>  * san antonio: 0.0056\n    #>  * san diego: 0.0452\n    #>  * san francisco: 1e-04\n    #>  * tucson: -1e-04\n    plot(GeoTestBest, type = "Lift")\n    #> You can include dates in your chart if you supply the end date of the treatment. Just specify the treatment_end_date parameter.\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"PlotLiftBest",src:n(790).Z})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'    plot(GeoTestBest, type = "ATT")\n    #> You can include dates in your chart if you supply the end date of the treatment. Just specify the treatment_end_date parameter.\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"PlotATTBest",src:n(6598).Z})),(0,o.kt)("p",null,"The new results augment the GeoLift model with a Ridge prognostic\nfunction which improves the model fit as seen in the new L2 Imbalance\nmetrics. This additional robustness is translated in a small increase in\nthe Percent Lift. Furthermore, by augmenting the model with a prognostic\nfunction, we have an estimate of the estimated bias that was removed by\nthe Augmented Synthetic Control Model."))}p.isMDXComponent=!0},790:function(e,t,n){t.Z=n.p+"assets/images/GeoLiftBest-1-708da3dc29ff66116a735d08b994e72a.png"},6598:function(e,t,n){t.Z=n.p+"assets/images/GeoLiftBest-2-abe5050641ec37cc833cffe7d06f3400.png"},7226:function(e,t,n){t.Z=n.p+"assets/images/GeoLiftMarketSelection_Plot2-1-d8ae60b76ab25d6804452f9a6fcc77a7.png"},8959:function(e,t,n){t.Z=n.p+"assets/images/GeoLiftMarketSelection_Plots-1-115d7bb4372f06682e288463df88519c.png"},1938:function(e,t,n){t.Z=n.p+"assets/images/GeoLiftMarketSelection_Plots-2-d8ae60b76ab25d6804452f9a6fcc77a7.png"},6685:function(e,t,n){t.Z=n.p+"assets/images/plot_ATT-1-12d52cef039842d4405e37357d720898.png"},6496:function(e,t,n){t.Z=n.p+"assets/images/plot_Lift-1-d79fa95355813e4ba38a2667baf9ef40.png"},5755:function(e,t,n){t.Z=n.p+"assets/images/plotting-1-0144e51464fda834c25d187a6c974661.png"},1987:function(e,t,n){t.Z=n.p+"assets/images/plottingTest-1-67ada2ad5141003283eedaed16940b36.png"}}]);