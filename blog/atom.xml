<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://facebookincubator.github.io/GeoLift/blog</id>
    <title>GeoLift Blog</title>
    <updated>2023-04-28T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://facebookincubator.github.io/GeoLift/blog"/>
    <subtitle>GeoLift Blog</subtitle>
    <icon>https://facebookincubator.github.io/GeoLift/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Continuous GeoLifts - Need For Speed]]></title>
        <id>continuous_geolifts</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/continuous_geolifts"/>
        <updated>2023-04-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[TL;DR]]></summary>
        <content type="html"><![CDATA[<h2>TL;DR</h2><ul><li>This blog post demonstrates how to deal with treated observations in sequential GeoLift testing.</li><li>Currently, when running two sequential GeoLifts, the treatment period of the first experiment becomes part of the pre-treatment period of the second experiment, potentially affecting results and power calculations.</li><li>To prevent this, you can replace the treatment locations in the first experiment with the best counterfactual available. Once the treatment location has been replaced, make sure to expand the control donor pool with said series.</li><li>We introduce our <code>ReplaceTreatmentSplit</code> function to replace the treated location units, easily implementing our proposed solution.</li></ul><h2>Introduction</h2><p>Advertisers have many questions to answer like, “What’s the incremental impact of this media channel?” and “What’s the budget elasticity of my investment in this channel?”.  These questions and more can be answered using GeoLift.</p><p>Since each question is different and we cannot answer them all at the same time, we need to decide which of them we should answer first by building a learning agenda. Our agenda holds everything from business questions and hypotheses to specific experiment designs that will give us the answers we are looking for. For the sake of simplicity, imagine we have two business questions, and we run our first GeoLift (experiment 1) to answer the first one and would like to design a new GeoLift (experiment 2) to give an answer to our second inquiry.</p><p>However, running a second GeoLift immediately after the previous one is not that simple.</p><h2>Sequential GeoLift testing</h2><p>At a first glance, we have a couple of options:</p><h4>Option 1: Repeating our experiment 1 treatment group in experiment 2, excluding the experiment 1 periods.</h4><p>This implies that we will remove experiment 1 time periods from the pre-treatment period, meaning we will get the same time series we had before experiment 1 was run. Furthermore, if we rerun the power analysis with this series, we will get the same treatment group we had for experiment 1.</p><p>While an attractive option, it lacks flexibility due to the fact that we will probably choose the same treatment we did before experiment 1. Furthermore, we should make sure that the GeoLift model is able to accurately predict the most recent time-stamps, using the latest market dynamics. For example, if we had a test for all of December, then the model trained up to November might struggle to predict January due to different spending trends. Moreover, if the treatment was very long, this might make it very hard to justify tying the set of pre-treatment periods for experiment 1 to the periods during experiment 2.</p><h4>Option 2: Rerunning the power analysis for experiment 2, without excluding experiment 1 periods.</h4><p>Without removing the periods from experiment 1, we will preserve the autocorrelation within the time series and avoid the sudden change that may occur, while keeping the latest time-stamps. Having said this, going with this option poses another threat. Locations that were used as a treatment group in experiment 1 will probably not be chosen as a good setup in the GeoLift ranking algorithm. When we run simulations using those locations, the simulated effect will probably be far off from the observed effect, since they already had a previous treatment that we are not considering.</p><p>If the locations selected as the treatment group presented a good setup for experiment 1, then at least some of them should be selected to be part of the treatment of experiment 2.</p><h3>Our solution: Replace treatment group values from experiment 1</h3><p>Our goal is maximizing the amount of data we have without excluding any periods and guaranteeing that our dataset does not contain any structural changes (treatment applied to certain locations in experiment 1). To do so, we recommend replacing the values of the locations that were treated during experiment 1, during the periods in which the treatment occurred and including them in the control donor pool.  For reference, here’s a picture of what this looks like.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/continuous_gl-plot2.png?raw=true" alt="continuous_geolift1"/></p><p>Here’s an example of our <strong>pseudo-code</strong>:</p><ol><li>Define locations that were treated and treatment period during experiment 1.</li><li>Fit a GeoLift counterfactual to each of the treatment locations, training it on experiment 1’s pre-treatment period.</li><li>Only keep the counterfactual that has the closest match to a treatment location in the pre-treatment period (using <strong>absolute L2 imbalance</strong>, A.K.A. the sum of squared differences between treatment and control prior to the experiment).</li><li>Replace the selected treatment location by its counterfactual values during the experiment 1’s treatment period.</li><li>Reassign the replaced treatment location to the control donor pool.</li><li>Repeat this process until there are no more treatment locations left.</li></ol><p>This solution has three clear benefits:</p><ul><li>We preserve the time series structure without excluding any data.</li><li>We replace the structural change in the treatment locations by our best estimate of what would have happened if they had not been treated.</li><li>We have a higher chance of providing better counterfactual fits for the replaced treatments because we are enlarging the control donor pool with each replacement.</li></ul><h2>Data-driven validation</h2><p>The last of these benefits <strong>does not necessarily mean</strong> that we will always be better off.  Particularly, the algorithm will provide the same L2 imbalance values for cases where we have a smaller treatment size given that the added value of the replaced treatment to the control donor pool will not be as large.</p><p>In order to understand what was the average impact that our algorithm had on L2 imbalance, we decided to run a random selection of locations to build different treatment groups of 5 locations.  We then passed those random groups through the algorithm, and compared it to the L2 imbalance that the counterfactual would have if the replaced treatment had not been added to the control donor pool. That is what we call the L2 imbalance improvement ratio:</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/continuous_gl-plot3.png?raw=true" alt="continuous_geolift2"/>
<img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/continuous_gl-plot1.png?raw=true" alt="continuous_geolift3"/></p><p>While the majority of the observations for the L2 imbalance improvement ratio are close to zero, there is a negative long tail that shows that there are some cases where our algorithm works better than the alternative.</p><p>To make our finding more robust, we repeated the simulations with randomly selected treatment groups of different sizes. Looking at the 10% and 25% quantiles of the histogram provided above for each treatment size, we saw improvements in L2 imbalance of up to 8% in the 10% quantile. Naturally, the larger the treatment group, the higher the benefit of our proposed solution, in line with our aforementioned hypothesis.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/continuous_gl-table1.png?raw=true" alt="continuous_geolift4"/></p><h2>How to implement the algorithm?</h2><p>We have recently landed a simple method for you to use if you would like to leverage this algorithm. Simply implement the <code>ReplaceTreatmentSplit</code> function, specifying what the treatment locations and the treatment start date and end date for experiment 1 are. You can pick up the replaced dataset from the <code>$data</code> argument in the list. The <code>$l2_imbalance_df</code> will give you the data frame of L2 imbalances for each treatment location when they were replaced.</p><pre><code># Import libraries and transform data.
library(GeoLift)
data(GeoLift_Test)
geo_data &lt;- GeoDataRead(data = GeoLift_Test,
                        date_id = &quot;date&quot;,
                        location_id = &quot;location&quot;,
                        Y_id = &quot;Y&quot;,
                        X = c(), #empty list as we have no covariates
                        format = &quot;yyyy-mm-dd&quot;,
                        summary = TRUE)
treatment_group &lt;- c(‘chicago’, ‘portland’)

# Replace treatment locations for best counterfactual.
g &lt;- ReplaceTreatmentSplit(
  treatment_locations = treatment_group,
  data = geo_data,
  treatment_start_time = 90,
  treatment_end_time = 105,
  model = &quot;none&quot;,
  verbose = TRUE
)

# Extract replaced data.
new_geo_data &lt;- g$data
</code></pre><h2>What’s up next?</h2><p>Keep your eye out for our coming blog posts, around topics like:</p><ul><li>When should I use Fixed Effects to get a higher signal to noise ratio?</li><li>Long term branding measurement with GeoLift.</li></ul>]]></content>
        <author>
            <name>Nicolas Cruces</name>
            <uri>https://github.com/NicolasMatrices-v2</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Enter into the time capsule - Determining Lookback Window]]></title>
        <id>lookback_window</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/lookback_window"/>
        <updated>2023-02-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[“Aunque me fuercen yo nunca voy a decir]]></summary>
        <content type="html"><![CDATA[<p><em><div align="right">“Aunque me fuercen yo nunca voy a decir</div></em>
<em><div align="right">Que todo tiempo, por pasado fue mejor&quot;</div></em>
<em><div align="right"> - Luis Alberto Spinetta</div></em></p><h2>TL;DR</h2><ul><li>The success of a geo-based experiment greatly depends on the Market Selection process.</li><li>In the GeoLift package, we use historical data and a simulation-based approach to identify the best set of treatment and control locations based on the constraints specified by the user.</li><li>Selecting an appropriate value for the <code>lookback_window</code> parameter (the amount of pre-treatment periods that will be considered) is a very important part of the process.</li><li>Based on the analysis presented in this note, we generally recommend using <strong>1/10th of the pre-treatment period as a simulation <code>lookback_window</code></strong> (especially if your time-series has a lot of variability across time).</li></ul><h2>What is considered a simulation in GeoLift?</h2><p>Essentially, before running the actual test, we are running a series of geo experiments to determine which is the best setup that will pave the way to success. As explained in further detail in <a href="https://www.facebookblueprint.com/student/path/253063">our Blueprint Course</a>, the GeoLift Market Selection process simulates a large number of geo experiments to determine which is the best test and control setup for you.</p><p>In each simulation a <strong>treatment effect</strong> is applied over a <strong>treatment group</strong> during the <strong>treatment period</strong>. Then, GeoLift then trains a <strong>counterfactual</strong> for the treatment group by using all of <strong>the pre-treatment periods</strong> prior to the experiment to assess the model&#x27;s performance.  Let’s breakdown each of these five components:</p><ul><li><strong>The treatment effect</strong>: is the Lift percentage that will be applied to a set of locations during the testing period.</li><li><strong>The treatment group</strong>: these are a set of locations that will be exposed to the treatment effect.</li><li><strong>The counterfactual</strong>: these are a set of locations that are used to estimate what would have happened to the treatment group if it had not been exposed to the treatment effect.  An easy way to think about it is as a weighted average of all the locations that are not part of the treatment group.</li><li><strong>The treatment period</strong>: represents the moments in which the treatment group will be exposed to the treatment.</li><li><strong>The pre-treatment period</strong>: this refers to the amount of periods that will be used to build the counterfactual, where there was no simulated difference between locations.  During this period, the counterfactual and the treatment group should have a similar behavior.</li></ul><p>Applying different effects to the same group in the same period allows us to holistically determine what the Minimum Detectable Effect (MDE) for that setup will be.  Among other metrics, this helps us understand whether we are dealing with a combination of locations that will have a higher likelihood of observing small effect sizes. However, seasonalities and variations throughout time make can difficult to estimate the MDE with complete certainty.  Fortunately, we can reduce this uncertainty by taking a look at the past!</p><h2>Introducing the lookback window parameter.</h2><p>Our first simulation uses the most recent/latest periods in our series as our <strong>treatment period</strong> and all of the remaining periods as our <strong>pre-treatment period</strong>.  This gives us the metrics we need to rank treatment groups for those time periods.</p><p>As stated in our <a href="https://facebookincubator.github.io/GeoLift/docs/GettingStarted/Walkthrough">GeoLift Walkthrough</a>, we can increase the number of simulated time periods by changing the <code>lookback_window</code>.  The <code>lookback_window</code> indicates how far back in time the simulations for the power analysis will go.  By increasing the <code>lookback_window</code>, we subtract the last period from the previous simulation’s total duration and repeat the process over the remaining periods.  Finally, we calculate the average metrics for each treatment group over all of the runs in different periods.</p><p>For example, imagine we have a 90 day long series with different locations and we would like to simulate a 15 day test, with a 2 day <code>lookback_window</code>.</p><ul><li>In the first simulation, the <strong>treatment period</strong> is made up of the most recent dates and Lift is simulated on it.  The remainder, the <strong>pre-treatment period</strong>, is used to build a counterfactual.  So, with a test duration of 15 days, for this iteration we use periods 1 to 75 as a <strong>pre-treatment period</strong> and periods 76 to 90 as a <strong>treatment period</strong>.</li><li>For our second simulation, the treatment period is shifted by one timestamp.  We use periods 1 to 74 as a pre-treatment period and periods 75 to 89 as a <strong>treatment period</strong>.</li><li>We then construct average metrics per each <strong>treatment group</strong>, using these two simulations.  In essence, we are repeating this flow until the number of time periods shifted is equal to the <code>lookback_window</code> parameter.</li></ul><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/lookback_1.png?raw=true" alt="lookbackwindow"/></p><p>In this context, more simulations allow us to have a more robust estimate of the metrics for each <strong>treatment group</strong>, observing if the same behavior occurs across different simulated <strong>treatment</strong> and <strong>pre-treatment periods</strong>.  The intuitive idea here is that we would like to capture some of the variability in the time series in our test setups, to avoid assuming something that could be different in the future.</p><h2>There’s a tradeoff: robustness vs preciseness</h2><p>The more we look back into the past, the more simulations per <strong>treatment group</strong> we will have.  This will make our estimates more robust and allow us to make safer predictions with regard to the pre-test metrics.</p><p>However, the more we look back into the past, the less precise our simulation will be as compared to the actual result.  Removing the last periods we have prior to the test leads to two major effects:</p><ul><li>Our simulations become less precise because they have a smaller amount of periods to build the counterfactual than what the actual experiment will have.</li><li>The accuracy of our simulation will be reduced since we are shortening the time that is being considered by the algorithm’s pre-treatment period.</li></ul><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/lookback_2.png?raw=true" alt="lookback_tradeoff"/></p><p>Given this tradeoff, we need to choose the amount of simulations we run considering the potential they have but keeping in mind that they also have a downside. Moreover, it is important to note that incresing the <code>lookback_window</code> parameter will exponentially increase the number of simulations performed in the Market Selection algorithm and will result in a longer runtime.</p><h2>How to choose the best <code>lookback_window</code>?</h2><p>The best way to analyze this problem is to capture the variance of detected effects in the same simulated <strong>treatment period</strong> for different <strong>treatment group</strong> combinations.</p><p>We have run this analysis using the dummy dataset that is available within the GeoLift package (<code>data(GeoLift_PreTest)</code>).  This dataset is similar to the example we showed above: it has a total of 90 days of pre-experiment data, and we will simulate a test that will last 15 days.  If we assume that there was no preexisting difference between locations, then the median of detected effects for each test start period should be around zero, which is the true effect.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/lookback_3.png?raw=true" alt="Simulations_lookback"/></p><p><em>The plot on the left shows the standard deviation of the detected effect per treatment start period. The plot on the right shows the range of detected effects for different treatment groups.</em></p><p>As we can see from the plot in the left, the standard deviation of the detected effect has a continuous drop from period 67 onwards.  From the second plot, we can also observe that the median effect is close to zero, especially in the last periods.</p><h2>Putting it in practice</h2><p>Since we have 75 pre-treatment periods in total, and the drop in standard deviation occurs in period 67, we would set a <code>lookback_window</code> of 8 periods.</p><p>To be as efficient as possible, we suggest running the GeoLiftMarketSelection function to find the best combination of markets with a <code>lookback_window=1</code>.  With those best candidates, do a deep dive with a longer <code>lookback_window=8</code> for each treatment combination by running GeoLiftPower, plot and analyze their power curves.</p><h2>In conclusion</h2><p>The <code>lookback_window</code> parameter is a fundamental element of a robust Power Analysis and Market Selection. As a best practice, we recommend running a data-driven analysis similar to the one that was showcased here to identify the ideal value for this parameter. Alternatively, <strong>a great rule of thumb is to keep 1/10 of the pre-treatment periods for simulations, once the test duration has been defined</strong>. So, if you have a total of 150 periods before your experiment, and you want to run a 10 day test, a total of 140 pre-treatment periods would remain.  Following this rule, you would have to set a <code>lookback_window=14</code> for the preferred options that come out of the GeoLiftMarketSelection ranking.</p><p>At the very least,  we suggest setting the <code>lookback_window</code> to a value that is at least as large as the time-series’ most granular seasonality (if we observe that sales vary widely throughout the days of the week, then setting the <code>lookback_window</code> to 7 would be a good start).</p><h2>What’s up next?</h2><p>Stay tuned for our next blog posts, related to topics like:</p><ul><li>When should I use Fixed Effects to get a higher signal to noise ratio?</li><li>When should our GeoLift test start?</li></ul>]]></content>
        <author>
            <name>Nicolas Cruces</name>
            <uri>https://github.com/NicolasMatrices-v2</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing GeoLift in Python]]></title>
        <id>Python</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/Python"/>
        <updated>2022-08-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2>Introduction</h2><p>Today we released a <a href="https://github.com/facebookincubator/GeoLift/tree/GeoLiftPython">tutorial</a> explaining how to run an end-to-end implementation of GeoLift in Python leveraging the <code>rpy2</code> package.  This has been a frequently requested feature by the GeoLift community. Moreover, it is one that we believe is very important for the continued scaling of GeoLift in data-savvy organizations.</p><p>The goal of this tutorial is to empower Python users to run the GeoLift R functions in Python using the <a href="https://rpy2.github.io"><code>rpy2</code></a> package. The rpy2 is an open source library which enables calling R from Python. It’s designed to facilitate the use of R by Python programmers.</p><h2>GeoLift in Python</h2><p>GeoLift is an end-to-end solution to measure Lift at a Geo-level using the latest developments in Synthetic Control Methods. Through this tutorial it is possible to run GeoLift R functions such as: Power Calculations, Inference, and Plots in Python.</p><p>There are 3 functions in Python under utils.py:</p><ul><li><p><code>GeoLiftData</code>: Load and return the dataset included in the GeoLift package.</p></li><li><p><code>ConvertDf</code>: Convert R dataframe into Pandas if <code>conv_type = &quot;ToPandas&quot;</code> or convert Pandas dataframe into R if <code>conv_type = &quot;ToR&quot;</code>.</p></li></ul><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/GeoLiftPython_1.jpg?raw=true" alt="ConvertDf"/></p><ul><li><code>GeoLiftPlot</code>: Receive a specific GeoLift Plot function (defined by the <code>func</code> parameter), its arguments and display the plot.</li></ul><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/GeoLiftPython_2.jpg?raw=true" alt="GeoLiftPlot"/></p><p>To run the R GeoLift functions in Python, you need to add <code>GeoLift.</code> in front of it as in <code>GeoLift.GeoLiftMarketSelection()</code>. For example:</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/GeoLiftPython_3.jpg?raw=true" alt="GeoLiftPython"/></p><h2>Start Your GeoLift in Python Now!​</h2><p>You can access the GeoLift in Python tutorial in the GeoLiftPython folder hosted in the GeoLift github repository through <a href="https://github.com/facebookincubator/GeoLift/tree/GeoLiftPython">this link</a>. The <code>README</code> file contains all the necessary information to start working with the Python version of GeoLift.</p>]]></content>
        <author>
            <name>Jussan Da Silva</name>
            <uri>https://github.com/JussanN/</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Multi-Cell Experiments with GeoLift]]></title>
        <id>MultiCell</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/MultiCell"/>
        <updated>2022-08-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introducing Multi-Cell GeoLift Tests]]></summary>
        <content type="html"><![CDATA[<h2>Introducing Multi-Cell GeoLift Tests</h2><p>We&#x27;re introducing Multi-Cell capabilities to the GeoLift code that can empower users to easily measure multiple treatments in a single experiment through different cells. These new capabilities unlock the potential to plan and execute tests to measure across strategies and channels! Launched with <code>GeoLift v2.5</code>, you now can:</p><ul><li><p>Easily set-up Multi-Cell tests through a Statistical Power-based Market Selection.</p></li><li><p>Calculate and plot the Power Curves for Multi-Cell tests.</p></li><li><p>Determine the test design required to find a Winner Cell.</p></li><li><p>Inference of Multi-Cell tests.</p></li><li><p>Get inspired with some of our external success cases of Multi-Cell tests showing how to <a href="https://www.facebook.com/business/success/ruffles-mexico?locale=es_LA">optimize a channel</a> or how to measure <a href="https://www.facebook.com/business/success/3-liverpool?locale=es_LA">incrementality across digitial channels</a>.</p></li><li><p>Learn how to run Multi-Cell tests with our <a href="https://facebookincubator.github.io/GeoLift/docs/GettingStarted/MultiCellWalkthrough">new Multi-Cell walkthrough</a> and <a href="https://github.com/facebookincubator/GeoLift/">GeoLift v2.5 now</a>!</p></li></ul><h2>Multi-Cell Tests</h2><p>We&#x27;ve introduced a set of new capabilities to GeoLift focused at Multi-Cell tests. Specifically, we added four new functions to set-up and execute these tests in a simple yet powerful way.</p><h3>1. MultiCellMarketSelection</h3><p><code>MultiCellMarketSelection()</code> will help the user identify and select their Test Markets based on their desired number of cells for either Standard or Inverse/Negative GeoLifts.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/MultiCellBlog1.jpg?raw=true" alt="MarketSelection"/></p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/MultiCellBlog2.jpg?raw=true" alt="MarketSelectionLiftPlots"/></p><h3>2. MultiCellPower</h3><p>After finding the optimal test and control locations for the Multi-Cell test, the user is able to estimate and plot the Power Curves for each of his Test Markets through the <code>MultiCellPower()</code> function.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/MultiCellBlog3.jpg?raw=true" alt="PowerCurves"/></p><h3>3. MultiCellWinner</h3><p>When the test&#x27;s objective is to identify a winner strategy or channel, the user has the option to use <code>MultiCellWinner()</code> which will identify how much better the performance of Cell A compared to Cell B should be in order to declare a winner through a statistical test. If more than two cells are provided, the test will perform all pairwise comparisons.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/MultiCellBlog4.jpg?raw=true" alt="Winner"/></p><h3>4. GeoLiftMultiCell</h3><p>Finally, after the test finishes <code>GeoLiftMultiCell()</code> will compute the inference and will show whether there was a winning cell based on the test results!</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/MultiCellBlog5.jpg?raw=true" alt="Results"/>
<img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/MultiCellBlog6.jpg?raw=true" alt="ResultsPlot"/></p><h2>Start Your Multi-Cell Testing Now!</h2><p>Learn more about how to run Multi-Cell tests through our <a href="https://facebookincubator.github.io/GeoLift/docs/GettingStarted/MultiCellWalkthrough">Multi-Cell GeoLift Walkthrough</a>, get the latest version of GeoLift from the <a href="https://github.com/facebookincubator/GeoLift/">GitHub repository</a> and start testing!</p>]]></content>
        <author>
            <name>Arturo Esquerra</name>
            <uri>https://github.com/ArturoEsquerra/</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Measuring Lagged Effects using GeoLift]]></title>
        <id>LaggedEffects</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/LaggedEffects"/>
        <updated>2022-06-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[TL;DR]]></summary>
        <content type="html"><![CDATA[<h2>TL;DR</h2><ul><li>A post test conversion window can help account for lagged effects of your advertising efforts.</li><li>These can be very useful when measuring conversions with long purchase cycles or when trying to determine an appropriate cooldown period between campaigns.</li><li>To determine the duration of a post test conversion window, we can monitor the treatment effects between test and control after the experiment ends until the two reconverge within a region of practical equivalence (ROPE).</li></ul><h2>Introduction</h2><p>Marketers are often running GeoLift experiments to assess the impacts of their advertising efforts.  However, advertising effects are rarely instantaneous.  Certain actions have longer conversion cycles and will require continued monitoring after campaigns complete to assess their impacts in full.  We explore the usage of post test conversion windows to measure these lagged effects and some of the considerations advertisers should take when thinking about using them.</p><h2>What is a post test conversion window and why do we use them?</h2><p>A post test conversion window is an interval of time after the completion of an experiment where we continue to track conversions to account for delayed impacts of our advertising efforts.  If the time it takes for our customers to take a desired action significantly lags when they view our advertisement, we can append this window and monitor our desired event after the experiment concludes.</p><p>Post test conversion windows can also be used as a cooldown period between testing different strategies.  They help us run cleaner experiments knowing we are closer to steady-state performance without the lagged effects of other campaigns.</p><blockquote><p>Jasper’s Market, a fictional retailer, needed to understand the value of their upcoming marketing campaign.  They plan on running a month-long campaign and know they have a typical purchase cycle of three weeks.  In other words, it takes their customers an average of three weeks from when they see an advertisement to physically going to the store and making a purchase.  Jasper’s Market felt that they would not be able to fully capture the impact of their marketing efforts by just measuring when their campaign is live, so they decided to append a post test conversion window to their experiment to measure the delayed effects of their campaign.</p></blockquote><h2>When should we include a post test conversion window?</h2><p>When deciding to include a post test conversion window, we are balancing two different forces.  On one hand we want to incorporate the lagged effects of our advertising efforts, better representing the complete impact of the campaign, while simultaneously trying to avoid introducing noise into the experimental analysis and potentially diluting the impact of our campaign.</p><p>To balance this in our favor, it makes sense to incorporate a post test conversion window when the marketing campaign effects we are measuring occur well after the advertisement is delivered.  The shorter the duration of the campaign relative to the time it typically takes for the conversion to occur (purchase cycle) the more likely we will benefit from including this window.</p><h2>How do we determine the optimal length?</h2><p>We can start by fixing the post test conversion window to the duration of our typical purchase cycle.  We can then measure the daily incremental conversion volume or average treatment effect on treated (ATT) over both the test period and the post test conversion window to determine the incremental impact of the test.</p><p>To determine the optimal duration for future tests, we can take note of how long it takes for test and control geographies to reconverge after the campaign treatment ends and set that as the duration going forward.  In some instances, the test and control populations might not reconverge exactly.  For these cases, we could determine a ‘Region of Practical Equivalence’ (ROPE) for the ATT and if the discrepancy falls within that range, we can change the post test conversion duration.  If the discrepancy is large however, we should inspect the individual geographies and ensure no unusual events occurred within any of the test or control locations and possibly repeat the experiment before assuming the effect goes into perpetuity.</p><blockquote><p>Jasper’s Market decided to launch their geo-experiment with a post conversion window of three weeks.  By doing this they ensure they will capture the lagged effects of their marketing efforts.  After the experiment ended, they continued monitoring their ATT.  As they had suspected, the gap between test and control did not immediately close after the experiment but continued for an additional two weeks before reconverging back to a negligible level.   Had they stopped monitoring the results after the end of the campaign they would have fully captured the impact of their efforts.  Having the post conversion window also helped them identify the amount of time needed after the campaign ended to run their next experiment without the fear of contamination.</p></blockquote><h2>Viewing Post Test Conversion Windows in GeoLift</h2><p>We recently added a small change to version 2.4.32, which allows the user to input the number of periods included as a post test conversion window.   This update has been added to both the absolute Lift and the ATT plots.
Within Lift you can include a ‘post_test_treatment_periods’ which will allow you to view the Treatment and Post Treatment periods in different colors.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/LaggedEffects_Lift.png?raw=true" alt="LaggedEffectsLift"/></p><p>Additionally in the ATT plot you can also include the ‘post_test_treatment_periods’ and a ROPE = TRUE parameter which will delineate the post_treatment window and show you the region of practical equivalence defined as between 10% and 90% quantiles for the ATT prior to the experiment.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/LaggedEffects_ATT.png?raw=true" alt="LaggedEffectsLift"/></p><h2>Final Thoughts</h2><p>When measuring the impact of your next advertising campaign, consider adding a post test conversion window to capture the lagged effects of your marketing efforts. The longer the purchase cycle for your product the more crucial it is that you incorporate one in your analysis. In addition to helping with measurement the cooldown period will also ensure you are ready to launch your next experiment on a blank slate without contamination of your prior campaign.</p><h2>What’s up next?</h2><p>Stay tuned for our next blog posts, related to topics like:</p><ul><li>Calibrating your MMM model with GeoLift.</li><li>When should I use Fixed Effects to get a higher signal to noise ratio?</li><li>When should our GeoLift test start?</li></ul>]]></content>
        <author>
            <name>Michael Khalil</name>
            <uri>https://github.com/michael-khalil</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GeoLift Blueprint Course by Meta]]></title>
        <id>blueprint-geolift</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/blueprint-geolift"/>
        <updated>2022-06-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Blueprint]]></summary>
        <content type="html"><![CDATA[<p><img src="https://facebook-cdn.exceedlms.com/uploads/resource_hero_pictures/targets/603247/w2400/2400-x-650.png?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9mYWNlYm9vay1jZG4uZXhjZWVkbG1zLmNvbS91cGxvYWRzL3Jlc291cmNlX2hlcm9fcGljdHVyZXMvdGFyZ2V0cy82MDMyNDcvdzI0MDAvMjQwMC14LTY1MC5wbmciLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE2NTQ1NDY3OTh9fX1dfQ__&amp;Signature=DXer4smR166~jI0jTqOkQUTKAd2tK2LhYVNa0H0qJ7iPsaJNAQNHxOLEwdbt~4lY0rUA5xhPQyYJWsgT9uwgUKvu33inf0SKAGvDCN2bfdfOWuwx1Na0ByjojRPWgBKZD3V43IvpGqq-zdtU4h9BJ4qh5btYF172hMcNciOQbPDLRurT55Nx0IdJpvRq09dZqOzK22-Eoa3B0kOqL5y4UzIbgw0MjIjj2sSpu2tCTpCoHjxQ6gzZQ~1ecdfFY7B1kC52kPmBFYrREjN6DQvELBKmxYfbukVSaD5YO34dUYOTzuxIecgHPpjy97VOueh6Zu1MjpEbLi0SWHCvYnBigg__&amp;Key-Pair-Id=APKAJINUZDMKZJI5I6DA" alt="Blueprint"/></p><h2>New GeoLift Course by Meta Blueprint</h2><p>We are excited to share the launch of our new self-paced step-by-step tutorial to teach you how to run geo-experiments with GeoLift!</p><p>Geo experimentation can help advertisers establish causal relationships between their marketing efforts and a business outcome. While there are many tools to run impact analysis, setting up these types of experiments can be a challenge. That is why we have developed GeoLift, one of the newest additions to the Meta Open Source library.</p><p>As an open source tool, we want to continue democratization of geo experimentation knowledge. Today, we are announcing that we have just published our first virtual and free <a href="https://www.facebookblueprint.com/student/path/253063-geolift-marketing-measurement?sid=cd9a46bc-9685-4af4-8ac3-4482e858fba9&amp;sid_i=5">course on GeoLift on Meta Blueprint</a>.</p><p>In just 50 minutes, we will go over:</p><ul><li>Introduction to GeoLift - The features of the GeoLift solution and how it can support your business goals, comparing it to other existing geo experimentation methods.</li><li>Design a GeoLift Experiment - The steps and data required to design a GeoLift experiment.</li><li>Apply Best Practices With GeoLift - How to apply best practices with GeoLift experiments and evaluate whether you can use other experiments instead.</li></ul><p>Optional Lessons for the more technical audience:</p><ul><li>Implement the GeoLift Solution - How to run simulations and determine the best test market for a GeoLift experiment.</li><li>Run a Successful GeoLift Experiment - How to use the GeoLift solution R code to run a successful GeoLift experiment</li></ul><p>Happy testing!</p><p><a href="https://www.facebookblueprint.com/student/path/253063-geolift-marketing-measurement?sid=cd9a46bc-9685-4af4-8ac3-4482e858fba9&amp;sid_i=5/"><img src="https://facebook-cdn.exceedlms.com/uploads/organizations/branding_logos/977/full/Meta_Blueprint_lockup_positive_primary_RGB__281_29.png?1636402332&amp;Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9mYWNlYm9vay1jZG4uZXhjZWVkbG1zLmNvbS91cGxvYWRzL29yZ2FuaXphdGlvbnMvYnJhbmRpbmdfbG9nb3MvOTc3L2Z1bGwvTWV0YV9CbHVlcHJpbnRfbG9ja3VwX3Bvc2l0aXZlX3ByaW1hcnlfUkdCX18yODFfMjkucG5nPzE2MzY0MDIzMzIiLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE2NTQ1NDczOTR9fX1dfQ__&amp;Signature=NDbZh2nCfpeJ3MBdHv2-AATzLGuX7YFD4YCcRCwDLbM~mEHBkT0a30yUFa86GnQVJhsLBqW2~jNE4SDTTf9gFkfJ0wg2HfT8dX1SAJoVkD~H7oNPy21QDVXXiDNoMrxoouuSz64OYIjSlUEtVEkkBYF1B60~ErquO7C4ubmGv49hbCOBuLl-6B0ZFQYnYocScAlG0QNuezMG6AhxSxPKOV-zQO5YPUvqMd~hCKmOkeqTsPONJ4Fv8obG-8SET7NGU3Hqen3pG2CRiQqAlZ1EKb0~FA59Z47RMIgsS-FM~EtkxbhRLSwvp9Ccfnc2YYDN3Sae~sIy~-aFyVsJnXV1oA__&amp;Key-Pair-Id=APKAJINUZDMKZJI5I6DA" alt="MetaBlueprint"/></a></p>]]></content>
        <author>
            <name>Arturo Esquerra</name>
            <uri>https://github.com/ArturoEsquerra/</uri>
        </author>
        <author>
            <name>Nicolas Cruces</name>
            <uri>https://github.com/NicolasMatrices-v2</uri>
        </author>
        <author>
            <name>Michael Khalil</name>
            <uri>https://github.com/michael-khalil</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Inverse GeoLift - inference done cheaper]]></title>
        <id>inverse-geolift</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/inverse-geolift"/>
        <updated>2022-05-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[TL;DR:]]></summary>
        <content type="html"><![CDATA[<h2>TL;DR:</h2><ul><li>Inverse GeoLifts help advertisers reduce geo experiment holdout sizes by inverting who sees ads: they show ads to the control group and do not show ads to the treatment group.</li><li>Given that geo-experiments require large control groups, Inverse GeoLifts are a good way of reducing holdout groups and opportunity cost without losing testing accuracy.</li><li>While Standard GeoLifts are great tools to measure a new media activity, ongoing media is best tested with an Inverse GeoLift.</li><li>MMM calibration: Standard GeoLifts are straightforward inputs into MMMs, while Inverse GeoLifts have a larger complexity for this use case.</li></ul><h2>Introduction and motivation</h2><p>GeoLift is an end-to-end solution that empowers you to determine the real effect of media via geographical experiments.</p><ul><li><strong>It’s causal.</strong>  GeoLift follows the KPI of a treatment group and compares it to what would have happened to that treatment group, if they had not been treated.  This is what we call a counterfactual.  The latter is built off of control locations that will not be exposed to the treatment effect and paired as close as possible to the treatment group, prior to the test.</li><li><strong>It’s transparent.</strong>  Being an open source package <a href="https://github.com/facebookincubator/GeoLift">hosted on Github</a>, the code is freely available for everyone to use and inspect.</li><li><strong>It sets you up for success.</strong>  There are many packages that help you analyze geographical quasi-experiments.  There’s only one that runs power analysis via simulations to help the user define where the treatment should be applied, on top of the standard analysis module.</li><li>It’s based on <a href="https://www.tandfonline.com/doi/abs/10.1080/01621459.2021.1929245">cutting-edge econometric models</a>.</li></ul><p>In order to construct a robust counterfactual, GeoLift usually requires more than half the amount of available locations to be part of the control group.  This is because the counterfactual is created as a linear combination of the units in the pool of controls, therefore, richer pools tend to provide more robust counterfactuals.  Standard GeoLifts can be a great setup when you are trying to measure the positive effect that new media has on your business.</p><p>However, <strong>it can be detrimental to run an experiment with a large holdout when you would like to measure ongoing media efforts</strong>.  This has to do with the opportunity cost of running a test.  When you are holding out media from certain locations, your total KPI will decrease by the effect that media has in those locations, scaled by the size of the holdout.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/OppCost.png?raw=true" alt="OppCost"/></p><h2>A new hope</h2><p>A great way to reduce holdout size without compromising experiment accuracy is to <strong>flip GeoLift on its head</strong>: instead of showing media to the treatment group and holding out the control group, you holdout the treatment group and show media to the control group.  This is what we refer to as an Inverse GeoLift.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/InverseLiftTable.png?raw=true" alt="InverseTable"/></p><p>Inverse GeoLifts have a different interpretation than Standard GeoLifts.  Instead of measuring the contribution that media is having on the treatment locations, you are measuring the opportunity cost that holding out media has on the treatment locations.</p><p>The main assumption here is that positive and negative effects are interchangeable.  In other words, if you would run a Standard or an Inverse GeoLift, the only thing that would change is the sign of the effect, not its absolute value.  <strong>Don’t worry</strong>: when setting up a GeoLift and deciding which is the best treatment group for the experiment, the difference between the detected effect and the true effect is a variable that we are taking into account to rank different location combinations. Treatment setups that have a low difference are preferred and will be highly ranked.  <a href="https://github.com/facebookincubator/GeoLift/blob/main/vignettes/GeoLift_Walkthrough.md#power-analysis">Check here</a> to see what the ranking variables look like in our Walkthrough.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/TypesGeoLift.png?raw=true" alt="TypesGeoLift"/></p><h2>Tips for building and analyzing an Inverse GeoLift</h2><h3>Determine budget for the test.</h3><p>As long as you know your Cost Per Incremental Conversion (CPIC), Standard GeoLifts will tell you the minimum budget that you should invest in the treatment group.  For Inverse GeoLifts, we have to interpret the budget suggestion as the minimum amount of money that should be taken away from the treatment group.  You can see these values in the <code>Investment</code> column from the output of <code>GeoLiftMarketSelection</code>.</p><p>If your treatment group is currently investing less than the required budget, then it will be hard to detect an effect, given that the CPIC is accurate.  You should try to select treatment setups that have a current investment that is below the absolute value of the required budget.  If there are no feasible options,  we suggest increasing the budget for all markets within the control group to ensure that the minimum amount of investment in the treatment group is met.  While this could change Business As Usual media circumstances, it becomes necessary in order to run a well-powered experiment. A good ad hoc rule for these cases is to compute the extra budget needed by calculating the difference between the required budget and the current investment in treatment and scaling that by the treatment investment share over total investment.  This will give you the value that you need to put up to run a successful experiment.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/ExtraInvestment.png?raw=true" alt="ExtraInvestment"/></p><h3>Keep an eye on the weights for the counterfactual.</h3><p>When setting up the test, you can access the weights for each of the control locations with the <code>GetWeights()</code> method.  This will show you how each of the locations that will not be treated (shown media ads) will be weighted within the counterfactual.</p><p>When running an Inverse GeoLift, it’s important to guarantee that you will show media ads in these locations.  If available, you can validate this by getting an investment report by location and ensuring that all locations with a positive weight in the counterfactual from GeoLift are being shown ads.  If this condition is not met, we could be observing a very small treatment effect due to dilution of media within the control group, when the real treatment effect could be large.</p><h3>Look for symmetric power curves</h3><p>A symmetric power curve with respect to the y axis will guarantee that there are no considerable differences for a particular setup when changing from a Standard to an Inverse GeoLift.  This is another guarantee that our assumptions for these types of tests hold.  You can visualize this by running the <code>GeoLiftPower()</code> function with positive and negative effects, a larger <code>lookback_window</code> and plotting its output.  You can check for examples of what it should look like in our Github Walkthrough.</p><h3>Calculate the Treatment’s CPIC</h3><p>At the end of your experiment, you will want to know how much each incremental action in the treatment group cost.  Since you did not invest in the treatment, you need to estimate the budget in that group.  In order to do so, you can calculate the sum of GeoLift weights from the counterfactual and multiply them by the investment per location in the control.  Dividing it by the incremental conversions will give you the Cost Per Incremental Conversion.</p><p><img src="https://github.com/facebookincubator/GeoLift/blob/main/website/static/img/CPICEquation.png?raw=true" alt="CPIC"/></p><p>Where t0 represents the last pre-treatment time-stamp, T represents the treatment end, and N represents the number of units in the pool of controls.</p><h2>What’s up next?</h2><p>Stay tuned for our next blog posts, related to topics like:</p><ul><li>Calibrating your MMM model with GeoLift.</li><li>What should my lookback window be?</li><li>When should our GeoLift test start?</li></ul><h2>Want to try out your first Inverse GeoLift?</h2><p>Install our Github package by <a href="https://github.com/facebookincubator/GeoLift#installing-geolift">following this link</a>, or join our Facebook Group if you have further questions on our open source tool!</p>]]></content>
        <author>
            <name>Nicolas Cruces</name>
            <uri>https://github.com/NicolasMatrices-v2</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Launching GeoLift v2.3 - Streamlined and Improved Power Calculations]]></title>
        <id>geolift-v23</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/geolift-v23"/>
        <updated>2022-03-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[GeoLift v2.3 Release]]></summary>
        <content type="html"><![CDATA[<h2>GeoLift v2.3 Release</h2><h3>TL;DR</h3><ul><li>The new version of the GeoLift code makes the pre-test analysis (Power Analysis and Market Selection) easier than ever before! The entire process is now handled by a single function: <code>GeoLiftMarketSelection()</code>.</li><li>The new package contains dozens of new features, functionalities, and bug fixes.</li><li>A new and improved walkthrough guide is available to help internal and external users run their GeoLift tests from start to finish!</li></ul><h2>GeoLift v2.3: Power Calculations Made Easier</h2><p>Following the feedback we received, we re-built the Power Calculation and Market Selection functionalities from the ground up! The new code makes this process easier, more streamlined, and more powerful than ever before.</p><h3>What&#x27;s New?</h3><ul><li>We&#x27;ve <strong>streamlined the entire Power Analysis and Market Selection process into a single function</strong>: <code>GeoLiftMarketSelection()</code>.</li><li>Previously, the process to select the test markets was very convoluted and involved going through several functions: <code>NumberLocations()</code>, <code>GeoLiftPower.search()</code>, <code>GeoLiftPowerFinder()</code>, and <code>GeoLiftPower()</code>. The new function, <code>GeoLiftMarketSelection()</code>, aggregates all of their functionalities and even improves upon them.</li><li>We&#x27;re soft-deprecating the <code>NumberLocations()</code>, <code>GeoLiftPower.search()</code>, <code>GeoLiftPowerFinder()</code>, and <code>GeoLiftPower()</code>. The development of these functions is now considered complete and they&#x27;re now superseeded by <code>GeoLiftMarketSelection()</code>.</li><li>We&#x27;ve included <strong>two</strong> new important <strong>metrics</strong> that can help us make better decisions when comparing between different test market candidates: <em>Average_MDE</em> and <em>abs_lift_in_zero</em>.</li><li>A <strong>new and improved ranking system</strong> takes into consideration all key model performance metrics to identify the best test markets for a given set-up.</li><li>We&#x27;ve added the option for <strong>one tailed tests</strong>.  These make the GeoLift model much more powerful than it was before, by simply changing the test hypothesis we want to validate.  Now you can chose from <em>Positive</em>, <em>Negative</em> and <em>Total</em> tests in the inference section and one sided or two sided tests in the power section.</li><li>The Market Selection process is more flexible and customizable than before! You can now include <strong>additional test constraints</strong> to focus only on the tests that make sense for our client. These are: the available budget (<em>budget</em>), acceptable holdout ranges (<em>holdout</em>), test markets we want to force into the test regions (<em>include_markets</em>), and markets that shouldn&#x27;t be considered as eligible test regions (<em>exclude_markets</em>).</li><li>We&#x27;ve added a <strong>new plotting method for GeoLiftMarketSelection</strong> objects. Through this method you can easily plot different test market selections and compare their model fit, MDE, and power curves! Plus, they lines have the GeoLift colors!
<img src="/img/GeoLiftMarketSelection_Plot2-1.png" alt="PlotATTBest"/></li><li>The <strong>new function</strong>: <code>GetWeights()</code> makes it easy to save the synthetic control weights into a data frame for further analysis.</li><li>To aid with <strong>MMM calibrations</strong>, we&#x27;ve included a new parameter in the Market Selection/Power Analysis function: <em>Correlations</em>. Setting it to TRUE allows the user to analyze the similarities between test and the control regions.</li><li>You can also <strong>plot historical similarities between test and control regions</strong> with <code>plotCorrels()</code>.
<img src="/img/plotcorrels.png" alt="PlotATTBest"/></li><li>A revamped <strong>GeoLift walkthrough vignette has been launched</strong> to accompany the new version of the package. This new material provides much more detailed explanation on our model, it&#x27;s parameters, how to run a study, and how to interpret the results.</li><li>We&#x27;ve <strong>fixed multiple bug and errors</strong> across the package (thanks for the feedback!).</li><li>Thanks to all of these changes, we&#x27;ve <strong>significantly reduced the total time needed in pre-test calculations!</strong></li></ul>]]></content>
        <author>
            <name>Arturo Esquerra</name>
            <uri>https://github.com/ArturoEsquerra/</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Brief Review of Geo Measurement Approaches]]></title>
        <id>geo-measurement-review</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/geo-measurement-review"/>
        <updated>2021-10-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Intro to Quasi-Experiments]]></summary>
        <content type="html"><![CDATA[<h2>Intro to Quasi-Experiments</h2><p>While Randomized Control Trials remain as the gold-standard for causal analysis, good RCTs are hard to come by given how complicated and expensive they are to execute. In particular, their reliance on randomization, which is the foundation for their unbiasedness, is often one of the factors that limit their usage. Some of the most common drawbacks of randomly splitting a population into test and control groups are:</p><ul><li>Implementing and maintaining the randomization throughout the experiment requires a robust infrastructure.</li><li>Limiting the treatment to only the test group can be unethical. For example, restraining the control group from receiving life-saving medicine is wrong. This could also be the case for PSAs.</li><li>It is common to have constraints on which units can be part of the test and control groups. These constraints prevent us from having a good randomization. For example, in a geo-experiment there are often a set of locations that need to receive the treatment and some units can’t get the treatment, which severely reduces the possible randomizations and greatly reduces the experiment’s precision.</li></ul><p>Quasi-experimental methods offer a great alternative to measure the impact of a treatment (such as an ad campaign) whenever randomization is not logistically feasible or ethical. These methods differ from traditional RCTs in that they don’t use randomization to select the test and control groups. This gives us a lot of additional flexibility in the experimental design at the cost of a typically larger sample sizes and additional modeling assumptions. Nevertheless, under the right circumstances quasi-experiments provide a great alternative to measure a treatment and can empower advertisers that have been historically unable to use incrementality to start taking decisions based on Lift. Moreover, one of the most commonly used type of quasi-experiments are geo tests, in which the units of experimentation are geographical areas such as zip-codes, cities, regions, or states. In this note we will do a historical review of the most commonly used approaches to geographic quasi-experimentation and compare them to GeoLift.</p>]]></content>
        <author>
            <name>Arturo Esquerra</name>
            <uri>https://github.com/ArturoEsquerra/</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome]]></title>
        <id>welcome</id>
        <link href="https://facebookincubator.github.io/GeoLift/blog/welcome"/>
        <updated>2021-10-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Welcome to GeoLift's blog where we discuss anything related to:]]></summary>
        <content type="html"><![CDATA[<p><strong>Welcome to GeoLift&#x27;s blog</strong> where we discuss anything related to:</p><ul><li>Geo-testing</li><li>Incrementality and Lift</li><li>GeoLift</li><li>and more!</li></ul>]]></content>
        <author>
            <name>Arturo Esquerra</name>
            <uri>https://github.com/ArturoEsquerra/</uri>
        </author>
        <author>
            <name>Nicolas Cruces</name>
            <uri>https://github.com/NicolasMatrices-v2</uri>
        </author>
    </entry>
</feed>