"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7029],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),m=c(n),u=i,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[m]="string"==typeof e?e:i,o[1]=r;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8166:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return m}});var a=n(3117),i=n(102),l=(n(7294),n(3905)),o=["components"],r={sidebar_position:3},s="Multi-Cell Walkthrough",c={unversionedId:"GettingStarted/MultiCellWalkthrough",id:"GettingStarted/MultiCellWalkthrough",title:"Multi-Cell Walkthrough",description:"---",source:"@site/docs/GettingStarted/MultiCellWalkthrough.md",sourceDirName:"GettingStarted",slug:"/GettingStarted/MultiCellWalkthrough",permalink:"/GeoLift/docs/GettingStarted/MultiCellWalkthrough",draft:!1,editUrl:"https://github.com/facebookincubator/GeoLift/docs/GettingStarted/MultiCellWalkthrough.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"GeoLift Walkthrough",permalink:"/GeoLift/docs/GettingStarted/Walkthrough"},next:{title:"Common Data Errors in GeoLift",permalink:"/GeoLift/docs/GettingStarted/CommonDataErrors"}},p={},m=[{value:"Introduction to Multi-Cell GeoLifts",id:"introduction-to-multi-cell-geolifts",level:2},{value:"Multi-Cell Tests with GeoLift",id:"multi-cell-tests-with-geolift",level:2},{value:"1. Determining the number of Cells",id:"1-determining-the-number-of-cells",level:2},{value:"2. Finding test markets with <code>MultiCellMarketSelection</code>",id:"2-finding-test-markets-with-multicellmarketselection",level:2},{value:"3. Detailed Power Curves",id:"3-detailed-power-curves",level:2},{value:"Optional: <code>MultiCellWinner</code>",id:"optional-multicellwinner",level:2},{value:"4. Campaign Execution",id:"4-campaign-execution",level:2},{value:"5. Multi-Cell Inference for GeoLift",id:"5-multi-cell-inference-for-geolift",level:2}],d={toc:m};function u(e){var t=e.components,r=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"multi-cell-walkthrough"},"Multi-Cell Walkthrough"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"introduction-to-multi-cell-geolifts"},"Introduction to Multi-Cell GeoLifts"),(0,l.kt)("p",null,"One of the key competitive advantages of Geo-Experimental techniques such as GeoLift is that they can empower decision-makers to make apples-to-apples comparisons across different channels. Multi-Cell experiments on GeoLift take this concept to the next level by allowing users to easily set-up and analyze complex experimental designs where more than one channel or strategy is measured simultaneously. With Multi-Cell GeoLifts you can:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Compare the incremental effect and ROI of two or more channels."),(0,l.kt)("li",{parentName:"ul"},"Improve a channel's strategy by evaluating which of two or more implementations provides better business results."),(0,l.kt)("li",{parentName:"ul"},"Optimize your media mix based on data and science!")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"multi-cell-tests-with-geolift"},"Multi-Cell Tests with GeoLift"),(0,l.kt)("p",null,"Starting on v2.5 of GeoLift, a new set of functions were introduced to run Multi-Cell tests. In this context, each cell refers to a different test group which will be used to measure and compare across strategies or channels. After identifying the KPI that will be measured with the experiment, the typical flow of a Multi-Cell experiment is as follows:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Determine how many cells or test groups will be used in the experiment.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection")," with the pre-determined number of cells (",(0,l.kt)("inlineCode",{parentName:"p"},"k"),"). This function will return ",(0,l.kt)("inlineCode",{parentName:"p"},"k")," optimal simultaneous test groups.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellPower")," to obtain a detailed Power Curve and required investment for each cell."))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"[Optional]",": ",(0,l.kt)("inlineCode",{parentName:"li"},"MultiCellWinner")," can provide valuable information if the test's objective is to determine whether a strategy/channel is statistically significantly better than the others. The output of this function will specify what would be needed for a cell to be declared winner based on statistical tests of equivalence.")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run the campaigns.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Run inference with ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoLiftMultiCell"),", find out the true incremental value of each cell, conclude whether there was a winner, and use the results to optimize your strategy!"))),(0,l.kt)("p",null,"After downloading GeoLift v2.5 (or greater), the first step is to load the package:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"# Load libraries\nlibrary(GeoLift)\nlibrary(dplyr)\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"1-determining-the-number-of-cells"},"1. Determining the number of Cells"),(0,l.kt)("p",null,"Figuring out how many cells will be measured in a GeoLift test is a crucial first step in the Multi-Cell process. Here, it is important to take into consideration that each cell will be measured by one or more test regions (city, state, DMA, etc.). Therefore, the total number of cells that ",(0,l.kt)("strong",{parentName:"p"},"can")," be measured with a GeoLift is bounded by the available data. Our recommendation is to be very conservative with the number of cells in a single GeoLift study."),(0,l.kt)("p",null,"For this Walkthrough we will explore a cross-channel test to measure and compare the Lift of our largest Social Media and Paid Search channels. We will use the sample data included in this package:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'data(GeoLift_PreTest)\n\n# Read into GeoLifts format with GeoDataRead\nGeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,\n                                    date_id = "date",\n                                    location_id = "location",\n                                    Y_id = "Y",\n                                    X = c(), #empty list as we have no covariates\n                                    format = "yyyy-mm-dd",\n                                    summary = TRUE)\n\n# Plot the KPI\'s historical values\nGeoPlot(GeoTestData_PreTest)\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"GeoPlot",src:n(4130).Z,width:"1344",height:"960"})),(0,l.kt)("p",null,"The dataset contains the pre-treatment daily sales for 40 US cities across 90 days. The data-frame contains three variables: location (city), date (in \u201cyyyy-mm-dd\u201d format), and Y (number of conversions/KPI in each day/location)."),(0,l.kt)("p",null,"Finally, it is important to highlight the trade-off between number of cells in a Multi-Cell GeoLift test and the model fit. Given that increasing the number of cells necessarily decreases the total available units in the pool of controls, adding too many cells can significantly reduce the model fit and accuracy. In our example, given that we only have 40 cities in total, it would be advisable to not run a Multi-Cell test with more than 2 or 3 cells."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"2-finding-test-markets-with-multicellmarketselection"},"2. Finding test markets with ",(0,l.kt)("inlineCode",{parentName:"h2"},"MultiCellMarketSelection")),(0,l.kt)("p",null,"Once the number of cells, ",(0,l.kt)("inlineCode",{parentName:"p"},"k"),", is determined, we can proceed to find the optimal test markets for each cell through ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection()"),". Relying on a sampling method defined by the user, the algorithm will create ",(0,l.kt)("inlineCode",{parentName:"p"},"k")," similar groups. For each group, the algorithm will run a series of simulations to determine the best combinations of test and control locations."),(0,l.kt)("p",null,"The key parameters needed to run this function are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"data"),": A data frame containing the historical conversions by geographic unit. This object must contain at least: a \u201clocation\u201d column with the geo name, a \u201cY\u201d column with the outcome data (such as units), a \u201ctime\u201d column with the indicator of the time period (starting at 1), and covariates (if available). Using the data frame generated by ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoDataRead()")," is the best way to make sure we have the correct format. For this example, we will use ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoTestData_PreTest"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"k"),": The number of partitions or cells. For our example we will analyze a ",(0,l.kt)("inlineCode",{parentName:"p"},"k = 2")," corresponding to the Social Media and Search channels.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"sampling_method"),": Sampling method used to create the ",(0,l.kt)("inlineCode",{parentName:"p"},"k")," partitions in the data set. At the moment, only ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Systematic_sampling"},"systematic sampling")," (",(0,l.kt)("inlineCode",{parentName:"p"},"sampling_method = 'systematic'"),") is available, but more options will be added in the future.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"top_choices"),": Specifies the number of top markets per cell to be displayed by the output.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"N"),": List of number of test markets to calculate power for. The values in this list represent the different test-market sizes we want to explore for each cell. This parameter is often guided by the budget and scope of the test we want to implement. For our example, we will analyze smaller tests with two and three test markets per cell (the remaining would be part of the control). We will do so by setting this parameter to ",(0,l.kt)("inlineCode",{parentName:"p"},"c(2,3)"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"X")," (Optional): List of the names of the covariates in the data. In our example we don\u2019t have any covariates so we\u2019ll leave it empty.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Y_id"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"location_id"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"time_id"),": Names of the outcome, location, and time variables. These parameters will let our function know are the names of these variables in our data frame. If left empty, this parameter will default to the standard values provided by ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoDataRead()")," which are: ",(0,l.kt)("inlineCode",{parentName:"p"},"Y"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"location"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"time"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"effect_size"),": This parameter contains a vector of different effect sizes (or lifts) we want to simulate. For simplicity of analysis, we ",(0,l.kt)("strong",{parentName:"p"},"strongly recommend focusing on either all positive or negative values for this parameter"),". For this example, we will set this parameter to a sequence of lifts between 0 and 25 percent with 2.5% increments, that is, seq(0,0.25,0.025).")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"treatment_periods"),": Specifies the test length. We recommend to specify a single treatment length for Multi-cell GeoLift Market Selections. In this example, we will analyze a 15-day test so we will set ",(0,l.kt)("inlineCode",{parentName:"p"},"treatment_periods = c(15)"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"lookback_window"),": A number indicating how far back in time the simulations for the power analysis should go. For instance, a value equal to 7 would simulate power for the last seven days. In general, when the historical data is stable (it doesn\u2019t vary wildly from one day/region to another) we can obtain a very robust and reliable power analysis by just looking into the most recent possible test (in other words, ",(0,l.kt)("inlineCode",{parentName:"p"},"lookback_window = 1"),"). It is important to mention that increasing the values in this parameter can significantly increase the algorithm\u2019s run-time. A common best practice is to keep ",(0,l.kt)("inlineCode",{parentName:"p"},"lookback_window = 1")," for ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection")," and then increasing it if needed in the next step of the Multi-Cell process.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"cpic"),": List of values indicating the Cost Per Incremental Conversion per cell, that is, on average how much do we typically need to spend to bring one incremental conversion. CPIC estimates can typically be obtained from Marketing Mix Models, Conversion Lifts, and previous experiments/geo-experiments. This value is key to get a good estimate of the budget that we will need to run a well-powered test. If there is no reliable information about the Cost Per Incremental Conversion, the default will be set to ",(0,l.kt)("inlineCode",{parentName:"p"},"cpic = 1"),", in which case, the investment results will output the incremental units needed for a successful test. If the KPI measured is in a currency rather than in units, then it should be set as the inverse of the incremental Return on Ad Spend (",(0,l.kt)("inlineCode",{parentName:"p"},"cpic = 1/iROAS"),"). In this example, considering that our KPI is in units we will use a ",(0,l.kt)("inlineCode",{parentName:"p"},"cpic = c(7.50,7.00)")," for the Social Media and Paid Search cells respectively. These ",(0,l.kt)("inlineCode",{parentName:"p"},"cpic")," values were guided by the results of previous single-cell GeoLifts.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"alpha"),": This parameter controls the significance Level that will be used by our model. By default ",(0,l.kt)("inlineCode",{parentName:"p"},"alpha = 0.1")," which is equivalent to a 90% confidence level.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"model"),": A string that indicates the outcome model used to augment the Augmented Synthetic Control Method. Augmentation through a prognostic function can improve fit and reduce L2 imbalance metrics. The most common values used are: ",(0,l.kt)("inlineCode",{parentName:"p"},'model = "None"')," (default) which won\u2019t augment the ASCM and ",(0,l.kt)("inlineCode",{parentName:"p"},'model = "Ridge"'),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"fixed_effects"),": A logic flag indicating whether to include unit Fixed Effects (FE) in the model. Fixed effects are an additional parameter that we can include into our models which represents a non-random component in our data. More specifically, in our model the FE represents the \u201clevel\u201d of each region\u2019s time-series across the data. By adding the FE we effectively remove this level - this allows our model to focus on explaining the variations from that level rather than the full value of Y. This is helpful when the series are stable across time. However, if the series isn\u2019t stable (it has large spikes/valleys, has a clear trend, etc.), then it can actually be a detriment to our model. By default, this parameter is set to fixed_effects = TRUE. A close inspection of GeoPlot\u2019s output combined with knowledge of the data is key to specify this parameter. In our example, we will set fixed_effects = TRUE given that we can observe a stable behavior of sales across our markets in the historical data.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Correlations"),": A logic flag indicating whether an additional column to the output with the correlations between the test regions and control markets. Given that not all locations in the pool of controls will contribute meaningfully to create our counterfactual/synthetic test region, the correlations can be a great resource to know how representative our test region is which can inform other analyses such as Marketing Mix Model calibration.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"side_of_test"),": A string indicating whether confidence will be determined using a one sided or a two sided test. These are the following valid values for this parameter:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'side_of_test = "two_sided"'),": The test statistic is the sum of all treatment effects."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'side_of_test = "one_sided"'),": One-sided test against positive or negative effects.")))),(0,l.kt)("p",null,"Taking this inputs into consideration, we find:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'set.seed(8) #To replicate the results\nMarkets <- MultiCellMarketSelection(data = GeoTestData_PreTest,\n                                 k = 2,\n                                 sampling_method = "systematic",\n                                 top_choices = 10,\n                                 N = c(2,3),\n                                 effect_size = seq(0, 0.25, 0.025),\n                                 treatment_periods = c(15),\n                                 lookback_window = 1,\n                                 cpic = c(7, 7.50),\n                                 alpha = 0.1,\n                                 model = "None",\n                                 fixed_effects = TRUE,\n                                 Correlations = TRUE,\n                                 side_of_test = "one_sided")\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"Markets\n\n##    cell ID                            location duration EffectSize\n## 1     1  1                 chicago, cincinnati       15      0.025\n## 2     2  1                     baltimore, reno       15      0.025\n## 3     1  2            cleveland, oklahoma city       15      0.050\n## 4     2  2                       houston, reno       15      0.025\n## 5     1  3               las vegas, saint paul       15      0.025\n## 6     2  3              honolulu, indianapolis       15      0.025\n## 7     1  4                nashville, san diego       15      0.025\n## 8     2  4             houston, portland, reno       15      0.025\n## 9     1  5               philadelphia, phoenix       15      0.025\n## 10    2  5         denver, memphis, washington       15      0.050\n## 11    1  6    cleveland, dallas, oklahoma city       15      0.025\n## 12    2  6               baton rouge, portland       15      0.025\n## 13    1  7               detroit, jacksonville       15      0.025\n## 14    2  7                     denver, memphis       15      0.050\n## 15    1  8         atlanta, chicago, nashville       15      0.050\n## 16    2  8                 memphis, washington       15      0.025\n## 17    1  9                  atlanta, nashville       15      0.050\n## 18    2  9      baton rouge, houston, portland       15      0.025\n## 19    1 10 columbus, jacksonville, minneapolis       15      0.025\n## 20    2 10                     miami, portland       15      0.075\n##    AvgScaledL2Imbalance abs_lift_in_zero Investment ProportionTotal_Y   Holdout\n## 1             0.2587293            0.001   15548.58        0.03418832 0.9658117\n## 2             0.3202672            0.002   20166.19        0.04151842 0.9584816\n## 3             0.5582169            0.001   60865.35        0.06599073 0.9340093\n## 4             0.4149685            0.003   20507.62        0.04282716 0.9571728\n## 5             0.7667228            0.003   20827.62        0.04571975 0.9542802\n## 6             0.3044968            0.004   16648.88        0.03307948 0.9669205\n## 7             0.4379696            0.005   17827.78        0.03891756 0.9610824\n## 8             0.2643562            0.005   28790.25        0.05949740 0.9405026\n## 9             0.5666373            0.007   45695.48        0.09829630 0.9017037\n## 10            0.6200586            0.008   57326.25        0.05922727 0.9407727\n## 11            0.6198624            0.008   36378.83        0.07923764 0.9207624\n## 12            0.2284603            0.010   16299.00        0.03289916 0.9671008\n## 13            0.3317333            0.008   13281.10        0.02940561 0.9705944\n## 14            0.6591485            0.009   42621.00        0.04433701 0.9556630\n## 15            0.5302774            0.008   55532.05        0.06089060 0.9391094\n## 16            0.4803747            0.011   19126.69        0.03939854 0.9606015\n## 17            0.6205455            0.008   40863.20        0.04449547 0.9555045\n## 18            0.2413871            0.015   28416.38        0.05780466 0.9421953\n## 19            0.3246004            0.010   24523.98        0.05485904 0.9451410\n## 20            0.3733400            0.010   50877.56        0.03495877 0.9650412\n##    rank\n## 1     1\n## 2     1\n## 3     2\n## 4     2\n## 5     2\n## 6     3\n## 7     4\n## 8     4\n## 9     5\n## 10    5\n## 11    6\n## 12    6\n## 13    6\n## 14    6\n## 15    8\n## 16    8\n## 17    8\n## 18    9\n## 19    8\n## 20    9\n")),(0,l.kt)("p",null,"The resulting table contains optimal test designs for this two-cell test as well as some model-fit metrics for each selection. The columns in the results represent:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"cell"),": Numeric identifier for each cell. In our case, we have two cells: cell one for Social Media and cell 2 for Paid Search."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"ID"),": Numeric identifier of a test market for a given duration. The combination of ",(0,l.kt)("strong",{parentName:"li"},"cell")," and ",(0,l.kt)("strong",{parentName:"li"},"ID")," completely defines a Multi-Cell market selection."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"location"),": Identifies the test location(s)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"duration"),": Shows how many time-stamps the test will last for. Since the data in our example had daily values, we will analyze a 15 day test."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"EffectSize"),": The Effect Size represents minimum Lift needed to have a well-powered test. These values directly depend on the ",(0,l.kt)("inlineCode",{parentName:"li"},"effect_size")," parameter of this function."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Power"),": The row\u2019s average power across all simulations at the specified Effect Size."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AvgScaledL2Imbalance"),": The Scaled L2 Imbalance metric is a goodness of fit metric between 0 and 1 that represents how well the model is predicting the pre-treatment observed values through the Synthetic Control. Scaled L2 Imbalance values of 0 show a perfect match of pre-treatment values. Scaled L2 Imbalance values of 1 show that the Synthetic Control algorithm is not adding much value beyond what you could accomplish with a simple average of control locations (naive model)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"abs_lift_in_zero"),": This value represents the average estimated Lift our test markets had when we actually simulated a 0% Lift in conversions. Great test market selections often have values of abs_lift_in_zero very close to zero."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Investment"),": The average investment needed to obtain a well-powered test given each cell's CPIC."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"ProportionTotal_Y"),": This proportion reflects the fraction of all conversions that happen in our test regions compared to the aggregation of all markets. For example, a value of 0.10 would indicate that our test markets represent 10% of all conversions for our KPI. ",(0,l.kt)("strong",{parentName:"li"},"It is highly recommended to look for locations across cells with similar values of this metric to make the results easier to compare and contrast"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Holdout"),": The percent of total conversions in the control markets. This value is complementary to ProportionTotal_Y."),(0,l.kt)("li",{parentName:"ul"},"rank: Ranking variable per cell that summarizes the values of EffectSize, Power, AvgScaledL2Imbalance, Average_MDE, and abs_lift_in_zero to help you select the best combination of test markets. The ranking variable allows for ties.")),(0,l.kt)("p",null,"Exploring the results of ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection"),' we find that locations "chicago, cincinnati" for Cell 1 and "honolulu, indianapolis" in Cell 2 provide excelent values across all model-fit metrics such as a low EffectSize, small AvgScaledL2Imbalance, an abs_lift_in_zero close to zero, and a very similar value of ProportionTotal_Y.'),(0,l.kt)("p",null,"We could define our Multi-Cell test markets as a list:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"# Cell and Market IDs in a list\ntest_locs <- list(cell_1 = 1, #chicago, cincinnati\n                  cell_2 = 3) #honolulu, indianapolis\n")),(0,l.kt)("p",null,"Moreover, we could plot these results to observe how the model fits the historical data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'\nplot(Markets,\n     test_markets = test_locs,\n     type = "Lift",\n     stacked = TRUE)\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"MarketSelection",src:n(7707).Z,width:"1344",height:"960"})),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"3-detailed-power-curves"},"3. Detailed Power Curves"),(0,l.kt)("p",null,"Perhaps the most important piece of part of any Market Selection process is to obtain and analyze the test's Power Curve. These curves tell us how sensible our test is at detecting a given Lift, it's statistical power, and give us a good estimate of the necessary budget needed to run the Multi-Cell test. The ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellPower")," function can be used to calculate the Power Curves for a given set of cells through simulations on the historical data."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellPower")," function is very easy to use as it will leverage the set-up and results we obtained from ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection"),". The most important parameters to calculate the Power Curves are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"x"),": A ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection")," object.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"test_markets"),": A list of the selected ",(0,l.kt)("inlineCode",{parentName:"p"},"market_ID")," per ",(0,l.kt)("inlineCode",{parentName:"p"},"cell_ID"),". It is important to make sure that this list contains exactly ",(0,l.kt)("inlineCode",{parentName:"p"},"k")," numeric values corresponding to the results of ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection"),". The recommended layout is ",(0,l.kt)("inlineCode",{parentName:"p"},"list(cell_1 = 1, cell2 = 1, cell3 = 1,...)"),", for our example we will set it to the previously defined list: ",(0,l.kt)("inlineCode",{parentName:"p"},"test_locs"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"effect_size"),": This parameter contains the different Lifts that we will simulate for our test. For each value in this parameter, the algorithm will simulate a GeoLift test with that Lift and will assess the statistical significance of the results to determine the test's Statistical Power. For this parameter, it is important to make sure that the sequence includes zero. For our example, we will set both positive and negative effect sizes to observe the curve's form and to see how symetrical it is.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"lookback_window"),": This parameter indicates how long back in history the simulations will go. Setting a ",(0,l.kt)("inlineCode",{parentName:"p"},"lookback_window")," to a value greater than one is particularly important to correctly assess the Power and estimate the budget of tests with significant seasonality or which aren't very stable. For this example, we will simulate an entire week, thus ",(0,l.kt)("inlineCode",{parentName:"p"},"lookback_window = 7"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"side_of_test"),": Indicates whether a ",(0,l.kt)("inlineCode",{parentName:"p"},"one_sided")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"two_sided")," test will be performed. The function will use the same value used for ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection")," unless specified otherwise. In this example, we will leave this parameter blank so it will default to the value specified in the previous step (",(0,l.kt)("inlineCode",{parentName:"p"},"one_sided"),")."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"Power <- MultiCellPower(Markets,\n                        test_markets = test_locs,\n                        effect_size =  seq(-0.5, 0.5, 0.05),\n                        lookback_window = 7)\n")),(0,l.kt)("p",null,"Plotting the results shows the Power Curve for each cell."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"plot(Power,\n     actual_values = TRUE,\n     smoothed_values = FALSE,\n     show_mde = TRUE,\n     breaks_x_axis = 15,\n     stacked = TRUE)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"PowerCurves",src:n(196).Z,width:"1344",height:"960"})),(0,l.kt)("p",null,"The plot shows that both Power Curves are ideal as they are: symmetric, centered at zero, and have relatively small effect sizes needed to accurately detect lift (","~","5%). Moreover, we observe that, despite different ",(0,l.kt)("inlineCode",{parentName:"p"},"cpic"),"s, an investment of $50,000 per cell should be more than enough to achieve a significant Lift."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"optional-multicellwinner"},"[Optional]",": ",(0,l.kt)("inlineCode",{parentName:"h2"},"MultiCellWinner")),(0,l.kt)("p",null,"While most of the times the objective of a Multi-Cell test is simply to accurately measure the incremental effect of different channels/strategies, sometimes we want to go a step further and declare which one of the competing cells is statistically significantly better or worse than the others. In this case, we can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellWinner")," function, to determine what must happen for a cell to be declared a ",(0,l.kt)("strong",{parentName:"p"},'"Winner"'),". This function works by answering the following question: for a given baseline Effect Size, how much better must the incremental Return on Ad Spend (iROAS) of a cell be so that it provides a statistically significantly better Lift overall?"),(0,l.kt)("p",null,"The most important parameters of the ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellWinner")," function are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"x"),": A ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellPower")," object created by the ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellPower")," function. By using this object, the winner analysis will be conducted on the cells defined previously. Specifically, Cell 1: Chicago and Cincinnati and Cell B: Honolulu and Indianapolis.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"effect_size"),":    A numeric value representing the Lift that will be simulated across all cells. If not specified (default), the algorithm will use the largest lift found in ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellPower")," that provides a well-powered test across all cells. For this example, we will se the baseline Lift at 10%.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"geolift_type"),': Specifies the type of GeoLift test to be performed which can be: "standard" (test regions will receive the treatment) or "inverse" (test regions will be holded-out from the treatment). More information on standard and inverse tests can be found ',(0,l.kt)("a",{parentName:"p",href:"https://facebookincubator.github.io/GeoLift/blog/inverse-geolift"},"here"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ROAS"),": Provides a series of incremental Return on Ad Spend (iROAS) values to assess. In this example we will use ROAS that range from 1x to 10x increasing by 0.5x through the sequence: ",(0,l.kt)("inlineCode",{parentName:"p"},"seq(1,10,0.5)"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"alpha"),": Significance Level. By default 0.1.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"method"),': This parameter indicates the mathematical method used to calculate the aggregate ATT Confidence Intervals. The user can choose between "conformal" (recommended) and "jackknife+".')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"stat_test"),': Indicates the stat test that will be used in our calculations. This parameter can take the values of "Total", "Negative", or "Positive". For this example, we will set this parameter to "Positive" as we conducted a Standard GeoLift Multi-Cell test.'))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'Winners <- MultiCellWinner(Power,\n                           effect_size = 0.1,\n                           geolift_type = "standard",\n                           ROAS = seq(1,10,0.5),\n                           alpha = 0.1,\n                           method = "conformal",\n                           stat_test = "Positive"\n)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"Winners\n##                cell_A incremental_A lowerCI_Cell_A upperCI_Cell_A\n## 1 chicago, cincinnati      78534.65        76612.9         557051\n##                   cell_B incremental_B lowerCI_Cell_B upperCI_Cell_B duration\n## 1 honolulu, indianapolis      9065.861        3467.71        75443.9       15\n##   ROAS\n## 1    9\n")),(0,l.kt)("p",null,"These results show that Cell 1 would need to be 9x more effective than Cell 2 to be declared a ",(0,l.kt)("strong",{parentName:"p"},'"Winner"'),"."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"4-campaign-execution"},"4. Campaign Execution"),(0,l.kt)("p",null,"After successfully selecting the test markets with ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiCellMarketSelection")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoLiftPower"),", the campaigns can be executed. For this test we will run ads on Social Media for the cities of Chicago and Cincinnati (Cell 1), Paid Search ads for the cities of Honolulu and Indianapolis (Cell 2), and holdout the rest of the locations in our data-set for a 15-day test."),(0,l.kt)("p",null,"We can use the simulated Multi-Cell data included in the ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoLift")," package as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'data(GeoLift_Test_MultiCell)\n\n# Read test data\nGeoTestData_Test <- GeoDataRead(data = GeoLift_Test_MultiCell,\n                                    date_id = "date",\n                                    location_id = "location",\n                                    Y_id = "Y",\n                                    X = c(), #empty list as we have no covariates\n                                    format = "yyyy-mm-dd",\n                                    summary = TRUE)\n\n## ##################################\n## #####       Summary       #####\n## ##################################\n##\n## * Raw Number of Locations: 40\n## * Time Periods: 105\n## * Final Number of Locations (Complete): 40\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"# Plot the historical and test data\nGeoPlot(GeoTestData_Test,\n        treatment_start = 91)\n\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"TreatmentGeoPlot",src:n(4130).Z,width:"1344",height:"960"})),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"5-multi-cell-inference-for-geolift"},"5. Multi-Cell Inference for GeoLift"),(0,l.kt)("p",null,"The final step in the process is to calculate the Lift generated by our Social Media and Paid Search campaigns. We can leverage the ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoLiftMultiCell")," function to easily perform statistical inference on our test. The key parameters of this function are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"data"),': A data.frame containing the historical conversions by geographic unit. It requires at least a "locations" column with the geo name, a "Y" column with the outcome data (units), a time column with the indicator of the time period (starting at 1), and covariates (optional). In this example, we will use the ',(0,l.kt)("inlineCode",{parentName:"p"},"GeoTestData_Test")," data frame we just obtained through ",(0,l.kt)("inlineCode",{parentName:"p"},"GeoDataRead"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"locations"),":A list of lists of test markets per cell. The recommended layout is ",(0,l.kt)("inlineCode",{parentName:"p"},'list(cell_1 = list("locA"), cell2 = list("locB"), cell3 = list("locC"),...)'),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"treatment_start_time"),": Time index of the start of the treatment. 91 for this example.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"treatment_end_time"),": Time index of the end of the treatment. 105 for this example.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"alpha"),": Significance level. Set to 0.1 by default.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"model"),': This parameter indicates which (if any) prognostic function will be used to augment our Augmented Sythetic Control Method (ASCM). The available options for this parameter are: "None", "Ridge", "GYSN", and "best". We will set this parameter to "best" to let the algorithm determine the optimal prognostic function.')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"fixed_effects"),": Indicates whether to include a Fixed Effects component in the model or not. Given our prior knowledge of this simulated data, we will set it to ",(0,l.kt)("inlineCode",{parentName:"p"},"TRUE"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ConfidenceIntervals"),": Indicates whether to estimate the Confidence Intervals for the total Lift.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"method"),': Identifies the mathematical methodology that will be used to calculate our Confidence Intervals. We will set this parameter to the recommended option which is "conformal".')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"geolift_type"),': String that specifies the type of GeoLift test to be performed. This parameter can be set to: "standard" or "inverse". Given that this was a "standard" Multi-Cell GeoLift test, we will set this parameter accordingly.')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"stat_test"),': Determines the test statistic to be used by GeoLift. Valid options are: "Total", "Negative", and "Positive". We will use the latter as this was a standard GeoLift Multi-Cell test.')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"winner_declaration"),": Logic flag indicating whether to compute a winner cell analysis. If set to TRUE (default), both pairwise and total statistical significance tests will be performed."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'# First we specify our test locations as a list\ntest_locations <- list(cell_1 = list("chicago", "cincinnati"),\n                       cell_2 = list("honolulu", "indianapolis"))\n\n#Then, we run MultiCellResults\nMultiCellResults <- GeoLiftMultiCell(data = GeoTestData_Test,\n                                     locations = test_locations,\n                                     treatment_start_time = 91,\n                                     treatment_end_time = 105,\n                                     alpha = 0.1,\n                                     model = "best",\n                                     fixed_effects = TRUE,\n                                     ConfidenceIntervals = TRUE,\n                                     method = "conformal",\n                                     stat_test = "Positive",\n                                     winner_declaration = TRUE)\n\n## Selected Ridge as best model.\n## Selected Ridge as best model.\n##\n## ##################################\n## ##### Pairwise  Comparisons #####\n## ##################################\n##                Cell_A  Lower_A   Upper_A                 Cell_B Lower_B\n## 1 chicago, cincinnati 16673.88 146162.26 honolulu, indianapolis 8745.23\n##     Upper_B Winner\n## 1 118669.62   <NA>\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"MultiCellResults\n\n## ##################################\n## #####     Cell 1 Results    #####\n## ##################################\n## Test results for 15 treatment periods, from time-stamp 91 to 105 for test markets:\n## 1 CHICAGO\n## 2 CINCINNATI\n## ##################################\n## #####     Test Statistics    #####\n## ##################################\n##\n## Percent Lift: 22.8%\n##\n## p-value: 0\n##\n## Incremental Y: 20215\n##\n## Average Estimated Treatment Effect (ATT): 673.819\n##\n## The results are significant at a 95% level. (ONE-SIDED POSITIVE LIFT TEST)\n##\n## There is a 0% chance of observing an effect this large or larger assuming treatment effect is zero.\n## ##################################\n## #####     Cell 2 Results    #####\n## ##################################\n## Test results for 15 treatment periods, from time-stamp 91 to 105 for test markets:\n## 1 HONOLULU\n## 2 INDIANAPOLIS\n## ##################################\n## #####     Test Statistics    #####\n## ##################################\n##\n## Percent Lift: 7.1%\n##\n## p-value: 0\n##\n## Incremental Y: 6493\n##\n## Average Estimated Treatment Effect (ATT): 216.423\n##\n## The results are significant at a 95% level. (ONE-SIDED POSITIVE LIFT TEST)\n##\n## There is a 0% chance of observing an effect this large or larger assuming treatment effect is zero.\n")),(0,l.kt)("p",null,"The results show that the Social Media campaign had a significant Lift equal to 22.8% while the Paid Search campaigns generated a 7.1% Lift. And while the results of the test show a higher Lift by Cell 1, the wide Confidence Intervals do not allow us to declare a winner at a 90% confidence level. We can dig deeper into the results through the ",(0,l.kt)("inlineCode",{parentName:"p"},"summary()")," of our Multi-Cell GeoLift object. The ",(0,l.kt)("inlineCode",{parentName:"p"},"summary()")," method has two options based on the ",(0,l.kt)("inlineCode",{parentName:"p"},"table")," parameter:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"table = TRUE")," a summary table of the results per cell will be printed.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"#Short summary of the results\nsummary(MultiCellResults, table = TRUE)\n\n## | Cell|Location               | Duration|Lift  | Incremental|     ATT| pValue|Stat_Test                    | Stat_Sig|Prognostic_Func |Winner |\n## |----:|:----------------------|--------:|:-----|-----------:|-------:|------:|:----------------------------|--------:|:---------------|:------|\n## |    1|CHICAGO, CINCINNATI    |       15|22.8% |       20215| 673.819|      0|ONE-SIDED POSITIVE LIFT TEST |        1|RIDGE           |       |\n## |    2|HONOLULU, INDIANAPOLIS |       15|7.1%  |        6493| 216.423|      0|ONE-SIDED POSITIVE LIFT TEST |        1|RIDGE           |       |\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"table = FALSE")," the complete summary method for each cell will be outputted.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},"# Deep dive into the results\nsummary(MultiCellResults, table = FALSE)\n\n## ##################################\n## #####     Cell 1 Results    #####\n## ##################################\n##\n## GeoLift Results Summary\n## ##################################\n## #####     Test Statistics    #####\n## ##################################\n##\n## * Average ATT: 673.819\n## * Percent Lift: 22.8%\n## * Incremental Y: 20215\n## * P-value: 0\n## * 90% Confidence Interval: (16673.879, 146162.255)\n##\n## ##################################\n## #####   Balance Statistics   #####\n## ##################################\n##\n## * L2 Imbalance: 956.678\n## * Scaled L2 Imbalance: 0.1694\n## * Percent improvement from naive model: 83.06%\n## * Average Estimated Bias: -0.441\n##\n## ##################################\n## #####     Model Weights      #####\n## ##################################\n##\n## * Prognostic Function: RIDGE\n##\n## * Model Weights:\n##  * portland: 0.2121\n##  * austin: 0.1521\n##  * nashville: 0.1463\n##  * san diego: 0.1371\n##  * minneapolis: 0.1364\n##  * new york: 0.06\n##  * baton rouge: 0.0558\n##  * reno: 0.0474\n##  * miami: 0.0359\n##  * atlanta: 0.0118\n##  * houston: 0.0044\n##  * san antonio: 0.0041\n##  * salt lake city: -0.0013\n##  * oakland: -8e-04\n##  * philadelphia: -7e-04\n##  * oklahoma city: -4e-04\n##  * baltimore: 2e-04\n##  * las vegas: 2e-04\n##  * dallas: 2e-04\n##  * new orleans: -1e-04\n##  * san francisco: -1e-04\n##  * boston: -1e-04\n##  * columbus: 1e-04\n##  * washington: -1e-04\n##  * kansas city: -1e-04\n##  * phoenix: -1e-04\n##  * memphis: -1e-04\n##  * milwaukee: -1e-04\n##  * cleveland: -1e-04\n##  * saint paul: 1e-04\n##\n## ##################################\n## #####     Cell 2 Results    #####\n## ##################################\n##\n## GeoLift Results Summary\n## ##################################\n## #####     Test Statistics    #####\n## ##################################\n##\n## * Average ATT: 216.423\n## * Percent Lift: 7.1%\n## * Incremental Y: 6493\n## * P-value: 0\n## * 90% Confidence Interval: (8745.226, 118669.618)\n##\n## ##################################\n## #####   Balance Statistics   #####\n## ##################################\n##\n## * L2 Imbalance: 1508.472\n## * Scaled L2 Imbalance: 0.326\n## * Percent improvement from naive model: 67.4%\n## * Average Estimated Bias: 11.782\n##\n## ##################################\n## #####     Model Weights      #####\n## ##################################\n##\n## * Prognostic Function: RIDGE\n##\n## * Model Weights:\n##  * austin: 0.3567\n##  * tucson: 0.2351\n##  * portland: 0.1744\n##  * nashville: 0.0988\n##  * baton rouge: 0.0823\n##  * detroit: 0.0445\n##  * orlando: 0.0391\n##  * phoenix: -0.0136\n##  * columbus: -0.0129\n##  * salt lake city: -0.0125\n##  * memphis: -0.0106\n##  * oklahoma city: 0.0102\n##  * miami: -0.0093\n##  * houston: 0.0073\n##  * las vegas: -0.007\n##  * baltimore: -0.0066\n##  * san francisco: -0.006\n##  * jacksonville: 0.006\n##  * kansas city: 0.0054\n##  * milwaukee: 0.0043\n##  * cleveland: 0.0042\n##  * philadelphia: 0.0041\n##  * denver: -0.0032\n##  * new orleans: -0.0028\n##  * los angeles: 0.0023\n##  * washington: 0.0023\n##  * minneapolis: 0.002\n##  * san diego: 0.0017\n##  * dallas: 0.0016\n##  * san antonio: 0.0014\n##  * reno: 0.0014\n##  * atlanta: -0.0013\n##  * boston: 0.0013\n##  * new york: -9e-04\n##  * oakland: 6e-04\n##  * saint paul: -1e-04\n##\n")),(0,l.kt)("p",null,"Finally, we can plot the results to observe both the Lift and ATT plots."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'plot(MultiCellResults, type = "Lift", stacked = TRUE)\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"ResultsLift",src:n(9971).Z,width:"1344",height:"960"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-r"},'plot(MultiCellResults, type = "ATT", stacked = TRUE)\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"ResultsATT",src:n(7944).Z,width:"1344",height:"960"})))}u.isMDXComponent=!0},7944:function(e,t,n){t.Z=n.p+"assets/images/MC_ATT-70decde4c86ab6ba3a3e6e90debb8f0b.png"},9971:function(e,t,n){t.Z=n.p+"assets/images/MC_Lift-d26bcbe06ccdc60104c53cad7150e85b.png"},7707:function(e,t,n){t.Z=n.p+"assets/images/MC_MarketSelection-504cc5054627c908e6ad60d2a81d92ff.png"},196:function(e,t,n){t.Z=n.p+"assets/images/MC_Power-b11f5f104a2330fd8b7b6877610ad515.png"},4130:function(e,t,n){t.Z=n.p+"assets/images/MC_treatment_plot-4748e2e833a4cffb51747469a2564375.png"}}]);