{"version":3,"sources":["../test/between.jsx"],"names":["describe","it","gt","lt","to","equal","TypeError","gte","lte","assertPasses","validator","element","propName","error","assertFails","be","instanceOf","Error","isRequired","min","max"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport React from 'react';\n\nimport { between } from '..';\n\nimport callValidator from './_callValidator';\n\ndescribe('between', () => {\n  it('returns a function', () => {\n    expect(typeof between({ gt: 0, lt: 1 })).to.equal('function');\n  });\n\n  it('throws with non-number values', () => {\n    expect(() => between({ gt: 'foo' })).to.throw(TypeError);\n    expect(() => between({ lt: 'foo' })).to.throw(TypeError);\n    expect(() => between({ gte: 'foo' })).to.throw(TypeError);\n    expect(() => between({ lte: 'foo' })).to.throw(TypeError);\n    expect(() => between({ gt: true })).to.throw(TypeError);\n    expect(() => between({ lt: true })).to.throw(TypeError);\n    expect(() => between({ gte: true })).to.throw(TypeError);\n    expect(() => between({ lte: true })).to.throw(TypeError);\n    expect(() => between({ gt: [] })).to.throw(TypeError);\n    expect(() => between({ lt: [] })).to.throw(TypeError);\n    expect(() => between({ gte: [] })).to.throw(TypeError);\n    expect(() => between({ lte: [] })).to.throw(TypeError);\n    expect(() => between({ gt: {} })).to.throw(TypeError);\n    expect(() => between({ lt: {} })).to.throw(TypeError);\n    expect(() => between({ gte: {} })).to.throw(TypeError);\n    expect(() => between({ lte: {} })).to.throw(TypeError);\n  });\n\n  function assertPasses(validator, element, propName) {\n    const error = callValidator(validator, element, propName, '\"between\" test');\n    expect(error).to.equal(null);\n  }\n\n  function assertFails(validator, element, propName) {\n    const error = callValidator(validator, element, propName, '\"between\" test');\n    expect(error).to.be.instanceOf(Error);\n  }\n\n  it('fails when the prop value is not a number', () => {\n    assertFails(\n      between({ gte: 1, lte: 3 }),\n      (<div a=\"1\" />),\n      'a',\n    );\n    assertFails(\n      between({ gte: 1, lte: 3 }).isRequired,\n      (<div a=\"1\" />),\n      'a',\n    );\n  });\n\n  it('passes when inside the range', () => {\n    assertPasses(between({ gte: -1, lt: 2 }), (<div a={-1} />), 'a');\n    assertPasses(between({ gte: -1 }), (<div a={-1} />), 'a');\n    assertPasses(between({ gte: -1, lte: 2 }), (<div a={2} />), 'a');\n    assertPasses(between({ lte: 2 }), (<div a={2} />), 'a');\n\n    assertPasses(between({ gt: -1, lt: 2 }), (<div a={-0} />), 'a');\n    assertPasses(between({ gt: -1, lt: 2 }), (<div a={0} />), 'a');\n    assertPasses(between({ gt: -1, lt: 2 }), (<div a={1} />), 'a');\n  });\n\n  it('fails when outside the range', () => {\n    assertFails(between({ gt: -1, lt: 2 }), (<div a={-1} />), 'a');\n    assertFails(between({ gt: -1 }), (<div a={-1} />), 'a');\n    assertFails(between({ gt: 1, lt: 2 }), (<div a={2} />), 'a');\n    assertFails(between({ lt: 2 }), (<div a={2} />), 'a');\n\n    assertFails(between({ gt: 0, lt: 2 }), (<div a={-0} />), 'a');\n    assertFails(between({ gt: 0, lt: 2 }), (<div a={0} />), 'a');\n    assertFails(between({ gt: -1, lt: 1 }), (<div a={1} />), 'a');\n  });\n\n  it('fails with thunks that return non-numbers', () => {\n    assertFails(\n      between({\n        gt() { return false; },\n        lt() { return []; },\n      }),\n      (<div value={3} />),\n      'value',\n    );\n    assertFails(\n      between({\n        gt() { return false; },\n        lt() { return []; },\n      }).isRequired,\n      (<div value={3} />),\n      'value',\n    );\n  });\n\n  it('works with functions', () => {\n    assertPasses(\n      between({\n        gt({ min }) { return min; },\n        lt({ max }) { return max; },\n      }),\n      (<div min={1} max={3} value={2} />),\n      'value',\n    );\n    assertPasses(\n      between({\n        gt({ min }) { return min; },\n        lt({ max }) { return max; },\n      }).isRequired,\n      (<div min={1} max={3} value={2} />),\n      'value',\n    );\n    assertPasses(\n      between({\n        gte({ min }) { return min; },\n        lte({ max }) { return max; },\n      }),\n      (<div min={1} max={3} value={2} />),\n      'value',\n    );\n    assertPasses(\n      between({\n        gte({ min }) { return min; },\n        lte({ max }) { return max; },\n      }).isRequired,\n      (<div min={1} max={3} value={2} />),\n      'value',\n    );\n    assertPasses(\n      between({\n        gte: 1,\n        lte({ max }) { return max; },\n      }),\n      (<div max={3} value={2} />),\n      'value',\n    );\n\n    assertFails(\n      between({\n        gte({ min }) { return min; },\n        lte({ max }) { return max; },\n      }),\n      (<div min={1} max={3} value={0} />),\n      'value',\n    );\n    assertFails(\n      between({\n        gte({ min }) { return min; },\n        lte({ max }) { return max; },\n      }).isRequired,\n      (<div min={1} max={3} value={0} />),\n      'value',\n    );\n    assertFails(\n      between({\n        gte({ min }) { return min; },\n        lte({ max }) { return max; },\n      }),\n      (<div min={1} max={3} value={4} />),\n      'value',\n    );\n    assertFails(\n      between({\n        gte({ min }) { return min; },\n        lte({ max }) { return max; },\n      }).isRequired,\n      (<div min={1} max={3} value={4} />),\n      'value',\n    );\n    assertFails(\n      between({\n        gt({ min }) { return min; },\n        lt({ max }) { return max; },\n      }),\n      (<div min={1} max={3} value={1} />),\n      'value',\n    );\n    assertFails(\n      between({\n        gt({ min }) { return min; },\n        lt({ max }) { return max; },\n      }),\n      (<div min={1} max={3} value={3} />),\n      'value',\n    );\n  });\n});\n"],"file":"between.js"}