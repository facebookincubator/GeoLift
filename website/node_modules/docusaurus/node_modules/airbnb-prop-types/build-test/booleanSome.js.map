{"version":3,"sources":["../test/booleanSome.jsx"],"names":["describe","it","to","TypeError","equal","assertPasses","validator","element","propName","assertFails","be","instanceOf","Error","isRequired","prop1","prop2","undefined"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport React from 'react';\n\nimport { booleanSome } from '..';\n\nimport callValidator from './_callValidator';\n\ndescribe('booleanSome', () => {\n  it('throws when given non-strings', () => {\n    expect(() => booleanSome()).to.throw(TypeError);\n    expect(() => booleanSome(null)).to.throw(TypeError);\n    expect(() => booleanSome({})).to.throw(TypeError);\n    expect(() => booleanSome([])).to.throw(TypeError);\n  });\n\n  it('throws when given 0 props', () => {\n    expect(() => booleanSome()).to.throw(TypeError);\n  });\n\n  it('returns a function', () => {\n    expect(typeof booleanSome('a', 'b')).to.equal('function');\n  });\n\n  function assertPasses(validator, element, propName) {\n    expect(callValidator(validator, element, propName)).to.equal(null);\n  }\n\n  function assertFails(validator, element, propName) {\n    expect(callValidator(validator, element, propName)).to.be.instanceOf(Error);\n  }\n\n  it('passes with all true', () => {\n    const validator = booleanSome('a', 'b');\n    assertPasses(validator, (<div a b />), 'a');\n    assertPasses(validator, (<div a b />), 'b');\n    assertPasses(validator.isRequired, (<div a b />), 'a');\n    assertPasses(validator.isRequired, (<div a b />), 'b');\n  });\n\n  it('behaves with one true', () => {\n    const validator = booleanSome('a', 'b');\n    assertPasses(validator, (<div a />), 'a');\n    assertPasses(validator, (<div a />), 'b');\n    assertPasses(validator, (<div b />), 'a');\n    assertPasses(validator, (<div b />), 'b');\n    assertPasses(validator.isRequired, (<div a />), 'a');\n    assertFails(validator.isRequired, (<div a />), 'b');\n    assertPasses(validator.isRequired, (<div b />), 'b');\n    assertFails(validator.isRequired, (<div b />), 'a');\n  });\n\n  it('passes with one false', () => {\n    const validator = booleanSome('a', 'b');\n    assertPasses(validator, (<div a={false} />), 'a');\n    assertPasses(validator, (<div a={false} />), 'b');\n    assertPasses(validator, (<div b={false} />), 'a');\n    assertPasses(validator, (<div b={false} />), 'b');\n    assertPasses(validator.isRequired, (<div a={false} b />), 'a');\n    assertPasses(validator.isRequired, (<div a={false} b />), 'b');\n    assertPasses(validator.isRequired, (<div a b={false} />), 'a');\n    assertPasses(validator.isRequired, (<div a b={false} />), 'b');\n  });\n\n  it('fails with all false', () => {\n    const validator = booleanSome('a', 'b');\n    assertFails(validator, (<div a={false} b={false} />), 'a');\n    assertFails(validator, (<div a={false} b={false} />), 'b');\n    assertFails(validator.isRequired, (<div a={false} b={false} />), 'a');\n    assertFails(validator.isRequired, (<div b={false} />), 'a');\n    assertFails(validator.isRequired, (<div a={false} b={false} />), 'b');\n    assertFails(validator.isRequired, (<div a={false} />), 'b');\n  });\n\n  it('passes when one of the boolean props is null/undefined', () => {\n    const prop1 = 'foo';\n    const prop2 = 'bar';\n    const validator = booleanSome(prop1, prop2);\n\n    assertPasses(validator, (<div foo bar={null} />), prop1);\n    assertPasses(validator, (<div foo bar={null} />), prop2);\n    assertPasses(validator, (<div bar foo={null} />), prop1);\n    assertPasses(validator, (<div bar foo={null} />), prop2);\n  });\n\n  it('fails when required, and one of the exclusive props is null/undefined', () => {\n    const prop1 = 'foo';\n    const prop2 = 'bar';\n    const validator = booleanSome(prop1, prop2).isRequired;\n\n    assertFails(validator, (<div foo bar={null} />), prop2);\n    assertFails(validator, (<div bar foo={null} />), prop1);\n    assertFails(validator, (<div foo bar={undefined} />), prop2);\n    assertFails(validator, (<div bar foo={undefined} />), prop1);\n  });\n});\n"],"file":"booleanSome.js"}