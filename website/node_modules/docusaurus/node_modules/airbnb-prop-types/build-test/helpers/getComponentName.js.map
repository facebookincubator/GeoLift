{"version":3,"sources":["../../test/helpers/getComponentName.js"],"names":["itIfReact","version","args","it","skip","describe","to","equal","Foo","name","displayName","FooMemo","React","memo","NamedFooMemo","AnonymousFoo","AnonymousFooMemo","undefined"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD;AAAA,oCAAaC,IAAb;AAAaA,IAAAA,IAAb;AAAA;;AAAA,SAAsB,yBAAQD,OAAR,EAAiB;AAAA,WAAME,EAAE,MAAF,SAAMD,IAAN,CAAN;AAAA,GAAjB,EAAoC;AAAA;;AAAA,WAAM,OAAAC,EAAE,EAACC,IAAH,YAAWF,IAAX,CAAN;AAAA,GAApC,CAAtB;AAAA,CAAlB;;AAEAG,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjCF,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7C,sBAAO,kCAAiB,KAAjB,CAAP,EAAgCG,EAAhC,CAAmCC,KAAnC,CAAyC,KAAzC;AACD,GAFC,CAAF;AAIAJ,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxD,aAASK,GAAT,GAAe,CAAE;;AAEjB,sBAAO,kCAAiBA,GAAjB,CAAP,EAA8BF,EAA9B,CAAiCC,KAAjC,CAAuCC,GAAG,CAACC,IAA3C;AAEAD,IAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAlB;AACA,sBAAO,kCAAiBF,GAAjB,CAAP,EAA8BF,EAA9B,CAAiCC,KAAjC,CAAuCC,GAAG,CAACE,WAA3C;AACD,GAPC,CAAF;AASAV,EAAAA,SAAS,CAAC,SAAD,EAAY,+CAAZ,EAA6D,YAAM;AAC1E,aAASQ,GAAT,GAAe,CAAE;;AACjB,QAAMG,OAAO,gBAAGC,kBAAMC,IAAN,CAAWL,GAAX,CAAhB;;AACA,sBAAO,kCAAiBG,OAAjB,CAAP,EAAkCL,EAAlC,CAAqCC,KAArC,CAA2C,KAA3C;AAEAC,IAAAA,GAAG,CAACE,WAAJ,GAAkB,KAAlB;;AACA,QAAMI,YAAY,gBAAGF,kBAAMC,IAAN,CAAWL,GAAX,CAArB;;AACA,sBAAO,kCAAiBM,YAAjB,CAAP,EAAuCR,EAAvC,CAA0CC,KAA1C,CAAgD,KAAhD;;AAEA,QAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM,CAAE,CAA7B;;AACA,QAAMC,gBAAgB,gBAAGJ,kBAAMC,IAAN,CAAWE,YAAX,CAAzB;;AACA,sBAAO,kCAAiBC,gBAAjB,CAAP,EAA2CV,EAA3C,CAA8CC,KAA9C,CAAoD,cAApD;AACD,GAZQ,CAAT;AAcAJ,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC5C,sBAAO,mCAAP,EAA2BG,EAA3B,CAA8BC,KAA9B,CAAoC,IAApC;AACA,sBAAO,kCAAiB,IAAjB,CAAP,EAA+BD,EAA/B,CAAkCC,KAAlC,CAAwC,IAAxC;AACA,sBAAO,kCAAiBU,SAAjB,CAAP,EAAoCX,EAApC,CAAuCC,KAAvC,CAA6C,IAA7C;AACA,sBAAO,kCAAiB,EAAjB,CAAP,EAA6BD,EAA7B,CAAgCC,KAAhC,CAAsC,IAAtC;AACA,sBAAO,kCAAiB,EAAjB,CAAP,EAA6BD,EAA7B,CAAgCC,KAAhC,CAAsC,IAAtC;AACA,sBAAO,kCAAiB,EAAjB,CAAP,EAA6BD,EAA7B,CAAgCC,KAAhC,CAAsC,IAAtC;AACA,sBAAO,kCAAiB,IAAjB,CAAP,EAA+BD,EAA/B,CAAkCC,KAAlC,CAAwC,IAAxC;AACD,GARC,CAAF;AASD,CArCO,CAAR","sourcesContent":["import React from 'react';\nimport { expect } from 'chai';\nimport ifReact from 'enzyme-adapter-react-helper/build/ifReact';\nimport getComponentName from '../../build/helpers/getComponentName';\n\nconst itIfReact = (version, ...args) => ifReact(version, () => it(...args), () => it.skip(...args));\n\ndescribe('getComponentName', () => {\n  it('given a string, returns the string', () => {\n    expect(getComponentName('foo')).to.equal('foo');\n  });\n\n  it('given a function, returns displayName or name', () => {\n    function Foo() {}\n\n    expect(getComponentName(Foo)).to.equal(Foo.name);\n\n    Foo.displayName = 'Bar';\n    expect(getComponentName(Foo)).to.equal(Foo.displayName);\n  });\n\n  itIfReact('>= 16.6', 'given a memo, returns the name or displayName', () => {\n    function Foo() {}\n    const FooMemo = React.memo(Foo);\n    expect(getComponentName(FooMemo)).to.equal('Foo');\n\n    Foo.displayName = 'Bar';\n    const NamedFooMemo = React.memo(Foo);\n    expect(getComponentName(NamedFooMemo)).to.equal('Bar');\n\n    const AnonymousFoo = () => {};\n    const AnonymousFooMemo = React.memo(AnonymousFoo);\n    expect(getComponentName(AnonymousFooMemo)).to.equal('AnonymousFoo');\n  });\n\n  it('given anything else, returns null', () => {\n    expect(getComponentName()).to.equal(null);\n    expect(getComponentName(null)).to.equal(null);\n    expect(getComponentName(undefined)).to.equal(null);\n    expect(getComponentName([])).to.equal(null);\n    expect(getComponentName({})).to.equal(null);\n    expect(getComponentName(42)).to.equal(null);\n    expect(getComponentName(true)).to.equal(null);\n  });\n});\n"],"file":"getComponentName.js"}