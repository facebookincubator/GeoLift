{"version":3,"sources":["../test/restrictedProp.jsx"],"names":["describe","it","to","equal","assertPasses","validator","element","propName","location","assertFails","be","instanceOf","Error","undefined","NaN","TypeError","messageFunction","props","componentName","exist","and","have","property"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport React from 'react';\n\nimport { restrictedProp } from '..';\n\nimport callValidator from './_callValidator';\n\ndescribe('restrictedProp', () => {\n  it('returns a function', () => {\n    expect(typeof restrictedProp()).to.equal('function');\n  });\n\n  function assertPasses(validator, element, propName, location) {\n    expect(callValidator(validator, element, propName, '\"restrictedProp\" test', location)).to.equal(null);\n  }\n\n  function assertFails(validator, element, propName, location) {\n    expect(callValidator(validator, element, propName, '\"restrictedProp\" test', location)).to.be.instanceOf(Error);\n  }\n\n  it('passes on null/undefined', () => {\n    assertPasses(restrictedProp(), (<div foo={null} />), 'foo', 'prop');\n    assertPasses(restrictedProp(), (<div foo={undefined} />), 'foo', 'prop');\n  });\n\n  it('fails on any other value', () => {\n    assertFails(restrictedProp(), (<div foo={false} />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo={NaN} />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo={[]} />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo={{}} />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo=\"\" />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo=\"foo\" />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo={() => {}} />), 'foo', 'prop');\n    assertFails(restrictedProp(), (<div foo={/a/g} />), 'foo', 'prop');\n  });\n\n  it('allows for custom error message', () => {\n    assertPasses(restrictedProp(() => new TypeError('Custom Error')), (<div />), 'foo', 'prop');\n    assertPasses(restrictedProp(() => new TypeError('Custom Error')), (<div foo={undefined} />), 'foo', 'prop');\n    assertPasses(restrictedProp(() => new TypeError('Custom Error')), (<div foo={null} />), 'foo', 'prop');\n\n    assertFails(restrictedProp(() => new TypeError('Custom Error')), (<div foo=\"foo\" />), 'foo', 'prop');\n    const messageFunction = (props, propName, componentName, location) => `[custom message] The ${propName} ${location} on ${componentName} is not allowed.`;\n    expect(callValidator(restrictedProp(messageFunction), (<div foo=\"foo\" />), 'foo', '\"restrictedProp\" test', 'prop')).to.exist\n      .and.be.instanceof(Error)\n      .and.have.property('message', '[custom message] The foo prop on \"restrictedProp\" test is not allowed.');\n  });\n});\n"],"file":"restrictedProp.js"}