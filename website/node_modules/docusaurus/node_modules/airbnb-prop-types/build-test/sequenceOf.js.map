{"version":3,"sources":["../test/sequenceOf.jsx"],"names":["describe","it","sequenceOf","to","equal","assertPasses","validator","element","propName","assertFails","be","instanceOf","Error","RangeError","undefined","TypeError","NaN","number","min","max","Infinity","isRequired","optional","twoPlus","twoOrLess","twoOrThree","oneOrTwo","string"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport { number, string } from 'prop-types';\nimport React from 'react';\n\nimport { sequenceOf } from '..';\n\nimport callValidator from './_callValidator';\n\ndescribe('sequenceOf', () => {\n  it('is a function', () => {\n    expect(typeof sequenceOf).to.equal('function');\n  });\n\n  function assertPasses(validator, element, propName) {\n    expect(callValidator(validator, element, propName, '\"sequenceOf\" passing test')).to.equal(null);\n  }\n\n  function assertFails(validator, element, propName) {\n    expect(callValidator(validator, element, propName, '\"sequenceOf\" failing test')).to.be.instanceOf(Error);\n  }\n\n  it('throws if not given at least one specifier', () => {\n    expect(() => sequenceOf()).to.throw(RangeError);\n    expect(() => sequenceOf(undefined)).to.throw(TypeError);\n    expect(() => sequenceOf(null)).to.throw(TypeError);\n    expect(() => sequenceOf([])).to.throw(TypeError);\n    expect(() => sequenceOf('')).to.throw(TypeError);\n    expect(() => sequenceOf(42)).to.throw(TypeError);\n    expect(() => sequenceOf(NaN)).to.throw(TypeError);\n  });\n\n  it('throws if given an invalid validator', () => {\n    expect(() => sequenceOf({ validator: null })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator: undefined })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator: false })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator: [] })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator: {} })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator: '' })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator: 3 })).to.throw(TypeError);\n  });\n\n  it('throws given a non-positive-integer min or max', () => {\n    const validator = number;\n\n    expect(() => sequenceOf({ validator, min: -1 })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: -1 })).to.throw(TypeError);\n\n    expect(() => sequenceOf({ validator, min: -1.4 })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: -1.4 })).to.throw(TypeError);\n\n    expect(() => sequenceOf({ validator, min: NaN })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: NaN })).to.throw(TypeError);\n\n    expect(() => sequenceOf({ validator, min: Infinity })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: Infinity })).to.throw(TypeError);\n\n    expect(() => sequenceOf({ validator, min: -Infinity })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: -Infinity })).to.throw(TypeError);\n  });\n\n  it('throws given inverted \"min\"/\"max\"', () => {\n    const validator = number;\n\n    expect(() => sequenceOf({ validator, min: 2, max: 1 })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: 1, min: 2 })).to.throw(TypeError);\n\n    expect(() => sequenceOf({ validator, min: 2, max: 0 })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: 0, min: 2 })).to.throw(TypeError);\n\n    expect(() => sequenceOf({ validator, min: 1, max: 0 })).to.throw(TypeError);\n    expect(() => sequenceOf({ validator, max: 0, min: 1 })).to.throw(TypeError);\n\n    expect(() => sequenceOf({ validator, max: 0 })).to.throw(TypeError); // \"min\" defaults to 1\n  });\n\n  it('returns a function', () => {\n    expect(typeof sequenceOf({ validator: number })).to.equal('function');\n  });\n\n  it('passes with null/undefined when optional', () => {\n    const validator = sequenceOf({ validator: number });\n\n    assertPasses(validator, (<div />), 'a');\n    assertPasses(validator, (<div a={null} />), 'a');\n    assertPasses(validator, (<div a={undefined} />), 'a');\n  });\n\n  it('fails with null/undefined when required', () => {\n    const validator = sequenceOf({ validator: number });\n\n    assertFails(validator.isRequired, (<div />), 'a');\n    assertFails(validator.isRequired, (<div a={null} />), 'a');\n    assertFails(validator.isRequired, (<div a={undefined} />), 'a');\n  });\n\n  it('fails with non-arrays', () => {\n    const validator = sequenceOf({ validator: number });\n\n    assertFails(validator, (<div a={false} />), 'a');\n    assertFails(validator, (<div a />), 'a');\n    assertFails(validator, (<div a={42} />), 'a');\n    assertFails(validator, (<div a=\"\" />), 'a');\n    assertFails(validator, (<div a={{}} />), 'a');\n    assertFails(validator, (<div a={() => {}} />), 'a');\n  });\n\n  it('works with specifiers without \"max\"/\"min\"', () => {\n    const validator = sequenceOf({ validator: number });\n\n    assertPasses(validator, (<div a={[1]} />), 'a');\n    assertPasses(validator, (<div a={[NaN]} />), 'a');\n    assertPasses(validator, (<div a={[-0]} />), 'a');\n    assertPasses(validator, (<div a={[Infinity]} />), 'a');\n\n    assertFails(validator, (<div a={[1, 2, null, <span />, {}, () => {}]} />), 'a');\n    assertFails(validator, (<div a={['1']} />), 'a');\n    assertFails(validator, (<div a={['1', '2']} />), 'a');\n  });\n\n  it('works with specifiers only providing \"min\"', () => {\n    const optional = sequenceOf({ validator: number, min: 0 });\n    const twoPlus = sequenceOf({ validator: number, min: 2 });\n\n    assertPasses(optional, (<div a={[]} />), 'a');\n    assertFails(twoPlus, (<div a={[]} />), 'a');\n    assertFails(twoPlus, (<div a={[1]} />), 'a');\n    assertPasses(twoPlus, (<div a={[1, 2]} />), 'a');\n    assertPasses(twoPlus, (<div a={[1, 2, 3]} />), 'a');\n\n    assertFails(twoPlus, (<div a={['1']} />), 'a');\n    assertFails(twoPlus, (<div a={['1', 2]} />), 'a');\n    assertFails(twoPlus, (<div a={[1, '2', 3]} />), 'a');\n  });\n\n  it('works with specifiers only providing \"max\"', () => {\n    const optional = sequenceOf({ validator: number, max: 1 });\n    const twoOrLess = sequenceOf({ validator: number, max: 2 });\n\n    assertFails(optional, (<div a={[]} />), 'a');\n    assertFails(twoOrLess, (<div a={[]} />), 'a');\n\n    assertPasses(twoOrLess, (<div a={[1]} />), 'a');\n    assertPasses(twoOrLess, (<div a={[1, 2]} />), 'a');\n\n    assertFails(twoOrLess, (<div a={[1, 2, 3]} />), 'a');\n    assertFails(twoOrLess, (<div a={['1']} />), 'a');\n    assertFails(twoOrLess, (<div a={['1', 2]} />), 'a');\n    assertFails(twoOrLess, (<div a={[1, '2', 3]} />), 'a');\n  });\n\n  it('works with specifiers with both \"min\" and \"max\"', () => {\n    const twoOrThree = sequenceOf({ validator: number, min: 2, max: 3 });\n    const oneOrTwo = sequenceOf({ validator: number, max: 2, min: 1 });\n\n    assertFails(twoOrThree, (<div a={[1]} />), 'a');\n    assertPasses(twoOrThree, (<div a={[1, 2]} />), 'a');\n    assertPasses(twoOrThree, (<div a={[1, 2, 3]} />), 'a');\n    assertFails(twoOrThree, (<div a={[1, 2, 3, 4]} />), 'a');\n\n    assertFails(oneOrTwo.isRequired, (<div a={[]} />), 'a');\n    assertPasses(oneOrTwo, (<div a={[1]} />), 'a');\n    assertPasses(oneOrTwo, (<div a={[1, 2]} />), 'a');\n    assertFails(oneOrTwo, (<div a={[1, 2, 3]} />), 'a');\n  });\n\n  it('works with an optional unmet, and a required met, specifier', () => {\n    const validator = sequenceOf(\n      { validator: string, min: 0 },\n      { validator: number },\n    );\n\n    assertPasses(validator, (<div a={['a', 1]} />), 'a');\n    assertPasses(validator, (<div a={[1]} />), 'a');\n    assertFails(validator, (<div a={['a']} />), 'a');\n    assertFails(validator, (<div a={['a', 'b']} />), 'a');\n    assertFails(validator, (<div a={[1, 2]} />), 'a');\n  });\n});\n"],"file":"sequenceOf.js"}